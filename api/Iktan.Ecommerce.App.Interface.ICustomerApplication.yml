### YamlMime:ManagedReference
items:
- uid: Iktan.Ecommerce.App.Interface.ICustomerApplication
  commentId: T:Iktan.Ecommerce.App.Interface.ICustomerApplication
  id: ICustomerApplication
  parent: Iktan.Ecommerce.App.Interface
  children:
  - Iktan.Ecommerce.App.Interface.ICustomerApplication.DeleteAsync(System.String)
  - Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAllAsync
  - Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAsync(System.String)
  - Iktan.Ecommerce.App.Interface.ICustomerApplication.InsertAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  - Iktan.Ecommerce.App.Interface.ICustomerApplication.UpdateAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  langs:
  - csharp
  - vb
  name: ICustomerApplication
  nameWithType: ICustomerApplication
  fullName: Iktan.Ecommerce.App.Interface.ICustomerApplication
  type: Interface
  source:
    remote:
      path: Iktan.Ecommerce.App.Interface/ICustomerApplication.cs
      branch: dev
      repo: https://github.com/ReinelPuentes92/ArquitectDDD.git
    id: ICustomerApplication
    path: Iktan.Ecommerce.App.Interface/ICustomerApplication.cs
    startLine: 11
  assemblies:
  - Iktan.Ecommerce.App.Interface
  namespace: Iktan.Ecommerce.App.Interface
  syntax:
    content: public interface ICustomerApplication
    content.vb: Public Interface ICustomerApplication
- uid: Iktan.Ecommerce.App.Interface.ICustomerApplication.InsertAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  commentId: M:Iktan.Ecommerce.App.Interface.ICustomerApplication.InsertAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  id: InsertAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  parent: Iktan.Ecommerce.App.Interface.ICustomerApplication
  langs:
  - csharp
  - vb
  name: InsertAsync(CustomerDTO)
  nameWithType: ICustomerApplication.InsertAsync(CustomerDTO)
  fullName: Iktan.Ecommerce.App.Interface.ICustomerApplication.InsertAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  type: Method
  source:
    remote:
      path: Iktan.Ecommerce.App.Interface/ICustomerApplication.cs
      branch: dev
      repo: https://github.com/ReinelPuentes92/ArquitectDDD.git
    id: InsertAsync
    path: Iktan.Ecommerce.App.Interface/ICustomerApplication.cs
    startLine: 16
  assemblies:
  - Iktan.Ecommerce.App.Interface
  namespace: Iktan.Ecommerce.App.Interface
  syntax:
    content: Task<Response<bool>> InsertAsync(CustomerDTO customerDTO)
    parameters:
    - id: customerDTO
      type: Iktan.Ecommerce.App.DTO.CustomerDTO
    return:
      type: System.Threading.Tasks.Task{Iktan.Ecommerce.Transversal.Common.Response{System.Boolean}}
    content.vb: Function InsertAsync(customerDTO As CustomerDTO) As Task(Of Response(Of Boolean))
  overload: Iktan.Ecommerce.App.Interface.ICustomerApplication.InsertAsync*
- uid: Iktan.Ecommerce.App.Interface.ICustomerApplication.UpdateAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  commentId: M:Iktan.Ecommerce.App.Interface.ICustomerApplication.UpdateAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  id: UpdateAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  parent: Iktan.Ecommerce.App.Interface.ICustomerApplication
  langs:
  - csharp
  - vb
  name: UpdateAsync(CustomerDTO)
  nameWithType: ICustomerApplication.UpdateAsync(CustomerDTO)
  fullName: Iktan.Ecommerce.App.Interface.ICustomerApplication.UpdateAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  type: Method
  source:
    remote:
      path: Iktan.Ecommerce.App.Interface/ICustomerApplication.cs
      branch: dev
      repo: https://github.com/ReinelPuentes92/ArquitectDDD.git
    id: UpdateAsync
    path: Iktan.Ecommerce.App.Interface/ICustomerApplication.cs
    startLine: 17
  assemblies:
  - Iktan.Ecommerce.App.Interface
  namespace: Iktan.Ecommerce.App.Interface
  syntax:
    content: Task<Response<bool>> UpdateAsync(CustomerDTO customerDTO)
    parameters:
    - id: customerDTO
      type: Iktan.Ecommerce.App.DTO.CustomerDTO
    return:
      type: System.Threading.Tasks.Task{Iktan.Ecommerce.Transversal.Common.Response{System.Boolean}}
    content.vb: Function UpdateAsync(customerDTO As CustomerDTO) As Task(Of Response(Of Boolean))
  overload: Iktan.Ecommerce.App.Interface.ICustomerApplication.UpdateAsync*
- uid: Iktan.Ecommerce.App.Interface.ICustomerApplication.DeleteAsync(System.String)
  commentId: M:Iktan.Ecommerce.App.Interface.ICustomerApplication.DeleteAsync(System.String)
  id: DeleteAsync(System.String)
  parent: Iktan.Ecommerce.App.Interface.ICustomerApplication
  langs:
  - csharp
  - vb
  name: DeleteAsync(string)
  nameWithType: ICustomerApplication.DeleteAsync(string)
  fullName: Iktan.Ecommerce.App.Interface.ICustomerApplication.DeleteAsync(string)
  type: Method
  source:
    remote:
      path: Iktan.Ecommerce.App.Interface/ICustomerApplication.cs
      branch: dev
      repo: https://github.com/ReinelPuentes92/ArquitectDDD.git
    id: DeleteAsync
    path: Iktan.Ecommerce.App.Interface/ICustomerApplication.cs
    startLine: 18
  assemblies:
  - Iktan.Ecommerce.App.Interface
  namespace: Iktan.Ecommerce.App.Interface
  syntax:
    content: Task<Response<bool>> DeleteAsync(string CustomerId)
    parameters:
    - id: CustomerId
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Iktan.Ecommerce.Transversal.Common.Response{System.Boolean}}
    content.vb: Function DeleteAsync(CustomerId As String) As Task(Of Response(Of Boolean))
  overload: Iktan.Ecommerce.App.Interface.ICustomerApplication.DeleteAsync*
  nameWithType.vb: ICustomerApplication.DeleteAsync(String)
  fullName.vb: Iktan.Ecommerce.App.Interface.ICustomerApplication.DeleteAsync(String)
  name.vb: DeleteAsync(String)
- uid: Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAsync(System.String)
  commentId: M:Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAsync(System.String)
  id: GetAsync(System.String)
  parent: Iktan.Ecommerce.App.Interface.ICustomerApplication
  langs:
  - csharp
  - vb
  name: GetAsync(string)
  nameWithType: ICustomerApplication.GetAsync(string)
  fullName: Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAsync(string)
  type: Method
  source:
    remote:
      path: Iktan.Ecommerce.App.Interface/ICustomerApplication.cs
      branch: dev
      repo: https://github.com/ReinelPuentes92/ArquitectDDD.git
    id: GetAsync
    path: Iktan.Ecommerce.App.Interface/ICustomerApplication.cs
    startLine: 19
  assemblies:
  - Iktan.Ecommerce.App.Interface
  namespace: Iktan.Ecommerce.App.Interface
  syntax:
    content: Task<Response<CustomerDTO>> GetAsync(string CustomerId)
    parameters:
    - id: CustomerId
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Iktan.Ecommerce.Transversal.Common.Response{Iktan.Ecommerce.App.DTO.CustomerDTO}}
    content.vb: Function GetAsync(CustomerId As String) As Task(Of Response(Of CustomerDTO))
  overload: Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAsync*
  nameWithType.vb: ICustomerApplication.GetAsync(String)
  fullName.vb: Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAsync(String)
  name.vb: GetAsync(String)
- uid: Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAllAsync
  commentId: M:Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAllAsync
  id: GetAllAsync
  parent: Iktan.Ecommerce.App.Interface.ICustomerApplication
  langs:
  - csharp
  - vb
  name: GetAllAsync()
  nameWithType: ICustomerApplication.GetAllAsync()
  fullName: Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAllAsync()
  type: Method
  source:
    remote:
      path: Iktan.Ecommerce.App.Interface/ICustomerApplication.cs
      branch: dev
      repo: https://github.com/ReinelPuentes92/ArquitectDDD.git
    id: GetAllAsync
    path: Iktan.Ecommerce.App.Interface/ICustomerApplication.cs
    startLine: 20
  assemblies:
  - Iktan.Ecommerce.App.Interface
  namespace: Iktan.Ecommerce.App.Interface
  syntax:
    content: Task<Response<IEnumerable<CustomerDTO>>> GetAllAsync()
    return:
      type: System.Threading.Tasks.Task{Iktan.Ecommerce.Transversal.Common.Response{System.Collections.Generic.IEnumerable{Iktan.Ecommerce.App.DTO.CustomerDTO}}}
    content.vb: Function GetAllAsync() As Task(Of Response(Of IEnumerable(Of CustomerDTO)))
  overload: Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAllAsync*
references:
- uid: Iktan.Ecommerce.App.Interface
  commentId: N:Iktan.Ecommerce.App.Interface
  href: Iktan.html
  name: Iktan.Ecommerce.App.Interface
  nameWithType: Iktan.Ecommerce.App.Interface
  fullName: Iktan.Ecommerce.App.Interface
  spec.csharp:
  - uid: Iktan
    name: Iktan
    href: Iktan.html
  - name: .
  - uid: Iktan.Ecommerce
    name: Ecommerce
    href: Iktan.Ecommerce.html
  - name: .
  - uid: Iktan.Ecommerce.App
    name: App
    href: Iktan.Ecommerce.App.html
  - name: .
  - uid: Iktan.Ecommerce.App.Interface
    name: Interface
    href: Iktan.Ecommerce.App.Interface.html
  spec.vb:
  - uid: Iktan
    name: Iktan
    href: Iktan.html
  - name: .
  - uid: Iktan.Ecommerce
    name: Ecommerce
    href: Iktan.Ecommerce.html
  - name: .
  - uid: Iktan.Ecommerce.App
    name: App
    href: Iktan.Ecommerce.App.html
  - name: .
  - uid: Iktan.Ecommerce.App.Interface
    name: Interface
    href: Iktan.Ecommerce.App.Interface.html
- uid: Iktan.Ecommerce.App.Interface.ICustomerApplication.InsertAsync*
  commentId: Overload:Iktan.Ecommerce.App.Interface.ICustomerApplication.InsertAsync
  href: Iktan.Ecommerce.App.Interface.ICustomerApplication.html#Iktan_Ecommerce_App_Interface_ICustomerApplication_InsertAsync_Iktan_Ecommerce_App_DTO_CustomerDTO_
  name: InsertAsync
  nameWithType: ICustomerApplication.InsertAsync
  fullName: Iktan.Ecommerce.App.Interface.ICustomerApplication.InsertAsync
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO
  commentId: T:Iktan.Ecommerce.App.DTO.CustomerDTO
  parent: Iktan.Ecommerce.App.DTO
  href: Iktan.Ecommerce.App.DTO.CustomerDTO.html
  name: CustomerDTO
  nameWithType: CustomerDTO
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO
- uid: System.Threading.Tasks.Task{Iktan.Ecommerce.Transversal.Common.Response{System.Boolean}}
  commentId: T:System.Threading.Tasks.Task{Iktan.Ecommerce.Transversal.Common.Response{System.Boolean}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Response<bool>>
  nameWithType: Task<Response<bool>>
  fullName: System.Threading.Tasks.Task<Iktan.Ecommerce.Transversal.Common.Response<bool>>
  nameWithType.vb: Task(Of Response(Of Boolean))
  fullName.vb: System.Threading.Tasks.Task(Of Iktan.Ecommerce.Transversal.Common.Response(Of Boolean))
  name.vb: Task(Of Response(Of Boolean))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Iktan.Ecommerce.Transversal.Common.Response`1
    name: Response
    href: Iktan.Ecommerce.Transversal.Common.Response-1.html
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Iktan.Ecommerce.Transversal.Common.Response`1
    name: Response
    href: Iktan.Ecommerce.Transversal.Common.Response-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: Iktan.Ecommerce.App.DTO
  commentId: N:Iktan.Ecommerce.App.DTO
  href: Iktan.html
  name: Iktan.Ecommerce.App.DTO
  nameWithType: Iktan.Ecommerce.App.DTO
  fullName: Iktan.Ecommerce.App.DTO
  spec.csharp:
  - uid: Iktan
    name: Iktan
    href: Iktan.html
  - name: .
  - uid: Iktan.Ecommerce
    name: Ecommerce
    href: Iktan.Ecommerce.html
  - name: .
  - uid: Iktan.Ecommerce.App
    name: App
    href: Iktan.Ecommerce.App.html
  - name: .
  - uid: Iktan.Ecommerce.App.DTO
    name: DTO
    href: Iktan.Ecommerce.App.DTO.html
  spec.vb:
  - uid: Iktan
    name: Iktan
    href: Iktan.html
  - name: .
  - uid: Iktan.Ecommerce
    name: Ecommerce
    href: Iktan.Ecommerce.html
  - name: .
  - uid: Iktan.Ecommerce.App
    name: App
    href: Iktan.Ecommerce.App.html
  - name: .
  - uid: Iktan.Ecommerce.App.DTO
    name: DTO
    href: Iktan.Ecommerce.App.DTO.html
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Iktan.Ecommerce.App.Interface.ICustomerApplication.UpdateAsync*
  commentId: Overload:Iktan.Ecommerce.App.Interface.ICustomerApplication.UpdateAsync
  href: Iktan.Ecommerce.App.Interface.ICustomerApplication.html#Iktan_Ecommerce_App_Interface_ICustomerApplication_UpdateAsync_Iktan_Ecommerce_App_DTO_CustomerDTO_
  name: UpdateAsync
  nameWithType: ICustomerApplication.UpdateAsync
  fullName: Iktan.Ecommerce.App.Interface.ICustomerApplication.UpdateAsync
- uid: Iktan.Ecommerce.App.Interface.ICustomerApplication.DeleteAsync*
  commentId: Overload:Iktan.Ecommerce.App.Interface.ICustomerApplication.DeleteAsync
  href: Iktan.Ecommerce.App.Interface.ICustomerApplication.html#Iktan_Ecommerce_App_Interface_ICustomerApplication_DeleteAsync_System_String_
  name: DeleteAsync
  nameWithType: ICustomerApplication.DeleteAsync
  fullName: Iktan.Ecommerce.App.Interface.ICustomerApplication.DeleteAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAsync*
  commentId: Overload:Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAsync
  href: Iktan.Ecommerce.App.Interface.ICustomerApplication.html#Iktan_Ecommerce_App_Interface_ICustomerApplication_GetAsync_System_String_
  name: GetAsync
  nameWithType: ICustomerApplication.GetAsync
  fullName: Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAsync
- uid: System.Threading.Tasks.Task{Iktan.Ecommerce.Transversal.Common.Response{Iktan.Ecommerce.App.DTO.CustomerDTO}}
  commentId: T:System.Threading.Tasks.Task{Iktan.Ecommerce.Transversal.Common.Response{Iktan.Ecommerce.App.DTO.CustomerDTO}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Response<CustomerDTO>>
  nameWithType: Task<Response<CustomerDTO>>
  fullName: System.Threading.Tasks.Task<Iktan.Ecommerce.Transversal.Common.Response<Iktan.Ecommerce.App.DTO.CustomerDTO>>
  nameWithType.vb: Task(Of Response(Of CustomerDTO))
  fullName.vb: System.Threading.Tasks.Task(Of Iktan.Ecommerce.Transversal.Common.Response(Of Iktan.Ecommerce.App.DTO.CustomerDTO))
  name.vb: Task(Of Response(Of CustomerDTO))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Iktan.Ecommerce.Transversal.Common.Response`1
    name: Response
    href: Iktan.Ecommerce.Transversal.Common.Response-1.html
  - name: <
  - uid: Iktan.Ecommerce.App.DTO.CustomerDTO
    name: CustomerDTO
    href: Iktan.Ecommerce.App.DTO.CustomerDTO.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Iktan.Ecommerce.Transversal.Common.Response`1
    name: Response
    href: Iktan.Ecommerce.Transversal.Common.Response-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Iktan.Ecommerce.App.DTO.CustomerDTO
    name: CustomerDTO
    href: Iktan.Ecommerce.App.DTO.CustomerDTO.html
  - name: )
  - name: )
- uid: Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAllAsync*
  commentId: Overload:Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAllAsync
  href: Iktan.Ecommerce.App.Interface.ICustomerApplication.html#Iktan_Ecommerce_App_Interface_ICustomerApplication_GetAllAsync
  name: GetAllAsync
  nameWithType: ICustomerApplication.GetAllAsync
  fullName: Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAllAsync
- uid: System.Threading.Tasks.Task{Iktan.Ecommerce.Transversal.Common.Response{System.Collections.Generic.IEnumerable{Iktan.Ecommerce.App.DTO.CustomerDTO}}}
  commentId: T:System.Threading.Tasks.Task{Iktan.Ecommerce.Transversal.Common.Response{System.Collections.Generic.IEnumerable{Iktan.Ecommerce.App.DTO.CustomerDTO}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Response<IEnumerable<CustomerDTO>>>
  nameWithType: Task<Response<IEnumerable<CustomerDTO>>>
  fullName: System.Threading.Tasks.Task<Iktan.Ecommerce.Transversal.Common.Response<System.Collections.Generic.IEnumerable<Iktan.Ecommerce.App.DTO.CustomerDTO>>>
  nameWithType.vb: Task(Of Response(Of IEnumerable(Of CustomerDTO)))
  fullName.vb: System.Threading.Tasks.Task(Of Iktan.Ecommerce.Transversal.Common.Response(Of System.Collections.Generic.IEnumerable(Of Iktan.Ecommerce.App.DTO.CustomerDTO)))
  name.vb: Task(Of Response(Of IEnumerable(Of CustomerDTO)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Iktan.Ecommerce.Transversal.Common.Response`1
    name: Response
    href: Iktan.Ecommerce.Transversal.Common.Response-1.html
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Iktan.Ecommerce.App.DTO.CustomerDTO
    name: CustomerDTO
    href: Iktan.Ecommerce.App.DTO.CustomerDTO.html
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Iktan.Ecommerce.Transversal.Common.Response`1
    name: Response
    href: Iktan.Ecommerce.Transversal.Common.Response-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Iktan.Ecommerce.App.DTO.CustomerDTO
    name: CustomerDTO
    href: Iktan.Ecommerce.App.DTO.CustomerDTO.html
  - name: )
  - name: )
  - name: )
