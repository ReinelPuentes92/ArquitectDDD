### YamlMime:XRefMap
sorted: true
references:
- uid: Iktan.Ecommerce.App.DTO
  name: Iktan.Ecommerce.App.DTO
  href: api/Iktan.Ecommerce.App.DTO.html
  commentId: N:Iktan.Ecommerce.App.DTO
  fullName: Iktan.Ecommerce.App.DTO
  nameWithType: Iktan.Ecommerce.App.DTO
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO
  name: CustomerDTO
  href: api/Iktan.Ecommerce.App.DTO.CustomerDTO.html
  commentId: T:Iktan.Ecommerce.App.DTO.CustomerDTO
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO
  nameWithType: CustomerDTO
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO.Address
  name: Address
  href: api/Iktan.Ecommerce.App.DTO.CustomerDTO.html#Iktan_Ecommerce_App_DTO_CustomerDTO_Address
  commentId: P:Iktan.Ecommerce.App.DTO.CustomerDTO.Address
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO.Address
  nameWithType: CustomerDTO.Address
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO.Address*
  name: Address
  href: api/Iktan.Ecommerce.App.DTO.CustomerDTO.html#Iktan_Ecommerce_App_DTO_CustomerDTO_Address_
  commentId: Overload:Iktan.Ecommerce.App.DTO.CustomerDTO.Address
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO.Address
  nameWithType: CustomerDTO.Address
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO.City
  name: City
  href: api/Iktan.Ecommerce.App.DTO.CustomerDTO.html#Iktan_Ecommerce_App_DTO_CustomerDTO_City
  commentId: P:Iktan.Ecommerce.App.DTO.CustomerDTO.City
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO.City
  nameWithType: CustomerDTO.City
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO.City*
  name: City
  href: api/Iktan.Ecommerce.App.DTO.CustomerDTO.html#Iktan_Ecommerce_App_DTO_CustomerDTO_City_
  commentId: Overload:Iktan.Ecommerce.App.DTO.CustomerDTO.City
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO.City
  nameWithType: CustomerDTO.City
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO.CompanyName
  name: CompanyName
  href: api/Iktan.Ecommerce.App.DTO.CustomerDTO.html#Iktan_Ecommerce_App_DTO_CustomerDTO_CompanyName
  commentId: P:Iktan.Ecommerce.App.DTO.CustomerDTO.CompanyName
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO.CompanyName
  nameWithType: CustomerDTO.CompanyName
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO.CompanyName*
  name: CompanyName
  href: api/Iktan.Ecommerce.App.DTO.CustomerDTO.html#Iktan_Ecommerce_App_DTO_CustomerDTO_CompanyName_
  commentId: Overload:Iktan.Ecommerce.App.DTO.CustomerDTO.CompanyName
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO.CompanyName
  nameWithType: CustomerDTO.CompanyName
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO.ContactName
  name: ContactName
  href: api/Iktan.Ecommerce.App.DTO.CustomerDTO.html#Iktan_Ecommerce_App_DTO_CustomerDTO_ContactName
  commentId: P:Iktan.Ecommerce.App.DTO.CustomerDTO.ContactName
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO.ContactName
  nameWithType: CustomerDTO.ContactName
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO.ContactName*
  name: ContactName
  href: api/Iktan.Ecommerce.App.DTO.CustomerDTO.html#Iktan_Ecommerce_App_DTO_CustomerDTO_ContactName_
  commentId: Overload:Iktan.Ecommerce.App.DTO.CustomerDTO.ContactName
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO.ContactName
  nameWithType: CustomerDTO.ContactName
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO.ContactTitle
  name: ContactTitle
  href: api/Iktan.Ecommerce.App.DTO.CustomerDTO.html#Iktan_Ecommerce_App_DTO_CustomerDTO_ContactTitle
  commentId: P:Iktan.Ecommerce.App.DTO.CustomerDTO.ContactTitle
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO.ContactTitle
  nameWithType: CustomerDTO.ContactTitle
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO.ContactTitle*
  name: ContactTitle
  href: api/Iktan.Ecommerce.App.DTO.CustomerDTO.html#Iktan_Ecommerce_App_DTO_CustomerDTO_ContactTitle_
  commentId: Overload:Iktan.Ecommerce.App.DTO.CustomerDTO.ContactTitle
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO.ContactTitle
  nameWithType: CustomerDTO.ContactTitle
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO.Country
  name: Country
  href: api/Iktan.Ecommerce.App.DTO.CustomerDTO.html#Iktan_Ecommerce_App_DTO_CustomerDTO_Country
  commentId: P:Iktan.Ecommerce.App.DTO.CustomerDTO.Country
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO.Country
  nameWithType: CustomerDTO.Country
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO.Country*
  name: Country
  href: api/Iktan.Ecommerce.App.DTO.CustomerDTO.html#Iktan_Ecommerce_App_DTO_CustomerDTO_Country_
  commentId: Overload:Iktan.Ecommerce.App.DTO.CustomerDTO.Country
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO.Country
  nameWithType: CustomerDTO.Country
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO.CustomerId
  name: CustomerId
  href: api/Iktan.Ecommerce.App.DTO.CustomerDTO.html#Iktan_Ecommerce_App_DTO_CustomerDTO_CustomerId
  commentId: P:Iktan.Ecommerce.App.DTO.CustomerDTO.CustomerId
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO.CustomerId
  nameWithType: CustomerDTO.CustomerId
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO.CustomerId*
  name: CustomerId
  href: api/Iktan.Ecommerce.App.DTO.CustomerDTO.html#Iktan_Ecommerce_App_DTO_CustomerDTO_CustomerId_
  commentId: Overload:Iktan.Ecommerce.App.DTO.CustomerDTO.CustomerId
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO.CustomerId
  nameWithType: CustomerDTO.CustomerId
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO.Fax
  name: Fax
  href: api/Iktan.Ecommerce.App.DTO.CustomerDTO.html#Iktan_Ecommerce_App_DTO_CustomerDTO_Fax
  commentId: P:Iktan.Ecommerce.App.DTO.CustomerDTO.Fax
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO.Fax
  nameWithType: CustomerDTO.Fax
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO.Fax*
  name: Fax
  href: api/Iktan.Ecommerce.App.DTO.CustomerDTO.html#Iktan_Ecommerce_App_DTO_CustomerDTO_Fax_
  commentId: Overload:Iktan.Ecommerce.App.DTO.CustomerDTO.Fax
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO.Fax
  nameWithType: CustomerDTO.Fax
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO.Phone
  name: Phone
  href: api/Iktan.Ecommerce.App.DTO.CustomerDTO.html#Iktan_Ecommerce_App_DTO_CustomerDTO_Phone
  commentId: P:Iktan.Ecommerce.App.DTO.CustomerDTO.Phone
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO.Phone
  nameWithType: CustomerDTO.Phone
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO.Phone*
  name: Phone
  href: api/Iktan.Ecommerce.App.DTO.CustomerDTO.html#Iktan_Ecommerce_App_DTO_CustomerDTO_Phone_
  commentId: Overload:Iktan.Ecommerce.App.DTO.CustomerDTO.Phone
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO.Phone
  nameWithType: CustomerDTO.Phone
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO.PostalCode
  name: PostalCode
  href: api/Iktan.Ecommerce.App.DTO.CustomerDTO.html#Iktan_Ecommerce_App_DTO_CustomerDTO_PostalCode
  commentId: P:Iktan.Ecommerce.App.DTO.CustomerDTO.PostalCode
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO.PostalCode
  nameWithType: CustomerDTO.PostalCode
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO.PostalCode*
  name: PostalCode
  href: api/Iktan.Ecommerce.App.DTO.CustomerDTO.html#Iktan_Ecommerce_App_DTO_CustomerDTO_PostalCode_
  commentId: Overload:Iktan.Ecommerce.App.DTO.CustomerDTO.PostalCode
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO.PostalCode
  nameWithType: CustomerDTO.PostalCode
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO.Region
  name: Region
  href: api/Iktan.Ecommerce.App.DTO.CustomerDTO.html#Iktan_Ecommerce_App_DTO_CustomerDTO_Region
  commentId: P:Iktan.Ecommerce.App.DTO.CustomerDTO.Region
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO.Region
  nameWithType: CustomerDTO.Region
- uid: Iktan.Ecommerce.App.DTO.CustomerDTO.Region*
  name: Region
  href: api/Iktan.Ecommerce.App.DTO.CustomerDTO.html#Iktan_Ecommerce_App_DTO_CustomerDTO_Region_
  commentId: Overload:Iktan.Ecommerce.App.DTO.CustomerDTO.Region
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.DTO.CustomerDTO.Region
  nameWithType: CustomerDTO.Region
- uid: Iktan.Ecommerce.App.DTO.UserDTO
  name: UserDTO
  href: api/Iktan.Ecommerce.App.DTO.UserDTO.html
  commentId: T:Iktan.Ecommerce.App.DTO.UserDTO
  fullName: Iktan.Ecommerce.App.DTO.UserDTO
  nameWithType: UserDTO
- uid: Iktan.Ecommerce.App.DTO.UserDTO.FirstName
  name: FirstName
  href: api/Iktan.Ecommerce.App.DTO.UserDTO.html#Iktan_Ecommerce_App_DTO_UserDTO_FirstName
  commentId: P:Iktan.Ecommerce.App.DTO.UserDTO.FirstName
  fullName: Iktan.Ecommerce.App.DTO.UserDTO.FirstName
  nameWithType: UserDTO.FirstName
- uid: Iktan.Ecommerce.App.DTO.UserDTO.FirstName*
  name: FirstName
  href: api/Iktan.Ecommerce.App.DTO.UserDTO.html#Iktan_Ecommerce_App_DTO_UserDTO_FirstName_
  commentId: Overload:Iktan.Ecommerce.App.DTO.UserDTO.FirstName
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.DTO.UserDTO.FirstName
  nameWithType: UserDTO.FirstName
- uid: Iktan.Ecommerce.App.DTO.UserDTO.LastName
  name: LastName
  href: api/Iktan.Ecommerce.App.DTO.UserDTO.html#Iktan_Ecommerce_App_DTO_UserDTO_LastName
  commentId: P:Iktan.Ecommerce.App.DTO.UserDTO.LastName
  fullName: Iktan.Ecommerce.App.DTO.UserDTO.LastName
  nameWithType: UserDTO.LastName
- uid: Iktan.Ecommerce.App.DTO.UserDTO.LastName*
  name: LastName
  href: api/Iktan.Ecommerce.App.DTO.UserDTO.html#Iktan_Ecommerce_App_DTO_UserDTO_LastName_
  commentId: Overload:Iktan.Ecommerce.App.DTO.UserDTO.LastName
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.DTO.UserDTO.LastName
  nameWithType: UserDTO.LastName
- uid: Iktan.Ecommerce.App.DTO.UserDTO.Password
  name: Password
  href: api/Iktan.Ecommerce.App.DTO.UserDTO.html#Iktan_Ecommerce_App_DTO_UserDTO_Password
  commentId: P:Iktan.Ecommerce.App.DTO.UserDTO.Password
  fullName: Iktan.Ecommerce.App.DTO.UserDTO.Password
  nameWithType: UserDTO.Password
- uid: Iktan.Ecommerce.App.DTO.UserDTO.Password*
  name: Password
  href: api/Iktan.Ecommerce.App.DTO.UserDTO.html#Iktan_Ecommerce_App_DTO_UserDTO_Password_
  commentId: Overload:Iktan.Ecommerce.App.DTO.UserDTO.Password
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.DTO.UserDTO.Password
  nameWithType: UserDTO.Password
- uid: Iktan.Ecommerce.App.DTO.UserDTO.Token
  name: Token
  href: api/Iktan.Ecommerce.App.DTO.UserDTO.html#Iktan_Ecommerce_App_DTO_UserDTO_Token
  commentId: P:Iktan.Ecommerce.App.DTO.UserDTO.Token
  fullName: Iktan.Ecommerce.App.DTO.UserDTO.Token
  nameWithType: UserDTO.Token
- uid: Iktan.Ecommerce.App.DTO.UserDTO.Token*
  name: Token
  href: api/Iktan.Ecommerce.App.DTO.UserDTO.html#Iktan_Ecommerce_App_DTO_UserDTO_Token_
  commentId: Overload:Iktan.Ecommerce.App.DTO.UserDTO.Token
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.DTO.UserDTO.Token
  nameWithType: UserDTO.Token
- uid: Iktan.Ecommerce.App.DTO.UserDTO.UserId
  name: UserId
  href: api/Iktan.Ecommerce.App.DTO.UserDTO.html#Iktan_Ecommerce_App_DTO_UserDTO_UserId
  commentId: P:Iktan.Ecommerce.App.DTO.UserDTO.UserId
  fullName: Iktan.Ecommerce.App.DTO.UserDTO.UserId
  nameWithType: UserDTO.UserId
- uid: Iktan.Ecommerce.App.DTO.UserDTO.UserId*
  name: UserId
  href: api/Iktan.Ecommerce.App.DTO.UserDTO.html#Iktan_Ecommerce_App_DTO_UserDTO_UserId_
  commentId: Overload:Iktan.Ecommerce.App.DTO.UserDTO.UserId
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.DTO.UserDTO.UserId
  nameWithType: UserDTO.UserId
- uid: Iktan.Ecommerce.App.DTO.UserDTO.UserName
  name: UserName
  href: api/Iktan.Ecommerce.App.DTO.UserDTO.html#Iktan_Ecommerce_App_DTO_UserDTO_UserName
  commentId: P:Iktan.Ecommerce.App.DTO.UserDTO.UserName
  fullName: Iktan.Ecommerce.App.DTO.UserDTO.UserName
  nameWithType: UserDTO.UserName
- uid: Iktan.Ecommerce.App.DTO.UserDTO.UserName*
  name: UserName
  href: api/Iktan.Ecommerce.App.DTO.UserDTO.html#Iktan_Ecommerce_App_DTO_UserDTO_UserName_
  commentId: Overload:Iktan.Ecommerce.App.DTO.UserDTO.UserName
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.DTO.UserDTO.UserName
  nameWithType: UserDTO.UserName
- uid: Iktan.Ecommerce.App.Interface
  name: Iktan.Ecommerce.App.Interface
  href: api/Iktan.Ecommerce.App.Interface.html
  commentId: N:Iktan.Ecommerce.App.Interface
  fullName: Iktan.Ecommerce.App.Interface
  nameWithType: Iktan.Ecommerce.App.Interface
- uid: Iktan.Ecommerce.App.Interface.ICustomerApplication
  name: ICustomerApplication
  href: api/Iktan.Ecommerce.App.Interface.ICustomerApplication.html
  commentId: T:Iktan.Ecommerce.App.Interface.ICustomerApplication
  fullName: Iktan.Ecommerce.App.Interface.ICustomerApplication
  nameWithType: ICustomerApplication
- uid: Iktan.Ecommerce.App.Interface.ICustomerApplication.DeleteAsync(System.String)
  name: DeleteAsync(string)
  href: api/Iktan.Ecommerce.App.Interface.ICustomerApplication.html#Iktan_Ecommerce_App_Interface_ICustomerApplication_DeleteAsync_System_String_
  commentId: M:Iktan.Ecommerce.App.Interface.ICustomerApplication.DeleteAsync(System.String)
  name.vb: DeleteAsync(String)
  fullName: Iktan.Ecommerce.App.Interface.ICustomerApplication.DeleteAsync(string)
  fullName.vb: Iktan.Ecommerce.App.Interface.ICustomerApplication.DeleteAsync(String)
  nameWithType: ICustomerApplication.DeleteAsync(string)
  nameWithType.vb: ICustomerApplication.DeleteAsync(String)
- uid: Iktan.Ecommerce.App.Interface.ICustomerApplication.DeleteAsync*
  name: DeleteAsync
  href: api/Iktan.Ecommerce.App.Interface.ICustomerApplication.html#Iktan_Ecommerce_App_Interface_ICustomerApplication_DeleteAsync_
  commentId: Overload:Iktan.Ecommerce.App.Interface.ICustomerApplication.DeleteAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.Interface.ICustomerApplication.DeleteAsync
  nameWithType: ICustomerApplication.DeleteAsync
- uid: Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAllAsync
  name: GetAllAsync()
  href: api/Iktan.Ecommerce.App.Interface.ICustomerApplication.html#Iktan_Ecommerce_App_Interface_ICustomerApplication_GetAllAsync
  commentId: M:Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAllAsync
  fullName: Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAllAsync()
  nameWithType: ICustomerApplication.GetAllAsync()
- uid: Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAllAsync*
  name: GetAllAsync
  href: api/Iktan.Ecommerce.App.Interface.ICustomerApplication.html#Iktan_Ecommerce_App_Interface_ICustomerApplication_GetAllAsync_
  commentId: Overload:Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAllAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAllAsync
  nameWithType: ICustomerApplication.GetAllAsync
- uid: Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAsync(System.String)
  name: GetAsync(string)
  href: api/Iktan.Ecommerce.App.Interface.ICustomerApplication.html#Iktan_Ecommerce_App_Interface_ICustomerApplication_GetAsync_System_String_
  commentId: M:Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAsync(System.String)
  name.vb: GetAsync(String)
  fullName: Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAsync(string)
  fullName.vb: Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAsync(String)
  nameWithType: ICustomerApplication.GetAsync(string)
  nameWithType.vb: ICustomerApplication.GetAsync(String)
- uid: Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAsync*
  name: GetAsync
  href: api/Iktan.Ecommerce.App.Interface.ICustomerApplication.html#Iktan_Ecommerce_App_Interface_ICustomerApplication_GetAsync_
  commentId: Overload:Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.Interface.ICustomerApplication.GetAsync
  nameWithType: ICustomerApplication.GetAsync
- uid: Iktan.Ecommerce.App.Interface.ICustomerApplication.InsertAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  name: InsertAsync(CustomerDTO)
  href: api/Iktan.Ecommerce.App.Interface.ICustomerApplication.html#Iktan_Ecommerce_App_Interface_ICustomerApplication_InsertAsync_Iktan_Ecommerce_App_DTO_CustomerDTO_
  commentId: M:Iktan.Ecommerce.App.Interface.ICustomerApplication.InsertAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  fullName: Iktan.Ecommerce.App.Interface.ICustomerApplication.InsertAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  nameWithType: ICustomerApplication.InsertAsync(CustomerDTO)
- uid: Iktan.Ecommerce.App.Interface.ICustomerApplication.InsertAsync*
  name: InsertAsync
  href: api/Iktan.Ecommerce.App.Interface.ICustomerApplication.html#Iktan_Ecommerce_App_Interface_ICustomerApplication_InsertAsync_
  commentId: Overload:Iktan.Ecommerce.App.Interface.ICustomerApplication.InsertAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.Interface.ICustomerApplication.InsertAsync
  nameWithType: ICustomerApplication.InsertAsync
- uid: Iktan.Ecommerce.App.Interface.ICustomerApplication.UpdateAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  name: UpdateAsync(CustomerDTO)
  href: api/Iktan.Ecommerce.App.Interface.ICustomerApplication.html#Iktan_Ecommerce_App_Interface_ICustomerApplication_UpdateAsync_Iktan_Ecommerce_App_DTO_CustomerDTO_
  commentId: M:Iktan.Ecommerce.App.Interface.ICustomerApplication.UpdateAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  fullName: Iktan.Ecommerce.App.Interface.ICustomerApplication.UpdateAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  nameWithType: ICustomerApplication.UpdateAsync(CustomerDTO)
- uid: Iktan.Ecommerce.App.Interface.ICustomerApplication.UpdateAsync*
  name: UpdateAsync
  href: api/Iktan.Ecommerce.App.Interface.ICustomerApplication.html#Iktan_Ecommerce_App_Interface_ICustomerApplication_UpdateAsync_
  commentId: Overload:Iktan.Ecommerce.App.Interface.ICustomerApplication.UpdateAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.Interface.ICustomerApplication.UpdateAsync
  nameWithType: ICustomerApplication.UpdateAsync
- uid: Iktan.Ecommerce.App.Interface.IUserApplication
  name: IUserApplication
  href: api/Iktan.Ecommerce.App.Interface.IUserApplication.html
  commentId: T:Iktan.Ecommerce.App.Interface.IUserApplication
  fullName: Iktan.Ecommerce.App.Interface.IUserApplication
  nameWithType: IUserApplication
- uid: Iktan.Ecommerce.App.Interface.IUserApplication.Authenticate(System.String,System.String)
  name: Authenticate(string, string)
  href: api/Iktan.Ecommerce.App.Interface.IUserApplication.html#Iktan_Ecommerce_App_Interface_IUserApplication_Authenticate_System_String_System_String_
  commentId: M:Iktan.Ecommerce.App.Interface.IUserApplication.Authenticate(System.String,System.String)
  name.vb: Authenticate(String, String)
  fullName: Iktan.Ecommerce.App.Interface.IUserApplication.Authenticate(string, string)
  fullName.vb: Iktan.Ecommerce.App.Interface.IUserApplication.Authenticate(String, String)
  nameWithType: IUserApplication.Authenticate(string, string)
  nameWithType.vb: IUserApplication.Authenticate(String, String)
- uid: Iktan.Ecommerce.App.Interface.IUserApplication.Authenticate*
  name: Authenticate
  href: api/Iktan.Ecommerce.App.Interface.IUserApplication.html#Iktan_Ecommerce_App_Interface_IUserApplication_Authenticate_
  commentId: Overload:Iktan.Ecommerce.App.Interface.IUserApplication.Authenticate
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.Interface.IUserApplication.Authenticate
  nameWithType: IUserApplication.Authenticate
- uid: Iktan.Ecommerce.App.Main
  name: Iktan.Ecommerce.App.Main
  href: api/Iktan.Ecommerce.App.Main.html
  commentId: N:Iktan.Ecommerce.App.Main
  fullName: Iktan.Ecommerce.App.Main
  nameWithType: Iktan.Ecommerce.App.Main
- uid: Iktan.Ecommerce.App.Main.CustomerApplication
  name: CustomerApplication
  href: api/Iktan.Ecommerce.App.Main.CustomerApplication.html
  commentId: T:Iktan.Ecommerce.App.Main.CustomerApplication
  fullName: Iktan.Ecommerce.App.Main.CustomerApplication
  nameWithType: CustomerApplication
- uid: Iktan.Ecommerce.App.Main.CustomerApplication.#ctor(Iktan.Ecommerce.Domain.Interface.ICustomerDomain,AutoMapper.IMapper,Iktan.Ecommerce.Transversal.Common.IAppLogger{Iktan.Ecommerce.App.Main.CustomerApplication})
  name: CustomerApplication(ICustomerDomain, IMapper, IAppLogger<CustomerApplication>)
  href: api/Iktan.Ecommerce.App.Main.CustomerApplication.html#Iktan_Ecommerce_App_Main_CustomerApplication__ctor_Iktan_Ecommerce_Domain_Interface_ICustomerDomain_AutoMapper_IMapper_Iktan_Ecommerce_Transversal_Common_IAppLogger_Iktan_Ecommerce_App_Main_CustomerApplication__
  commentId: M:Iktan.Ecommerce.App.Main.CustomerApplication.#ctor(Iktan.Ecommerce.Domain.Interface.ICustomerDomain,AutoMapper.IMapper,Iktan.Ecommerce.Transversal.Common.IAppLogger{Iktan.Ecommerce.App.Main.CustomerApplication})
  name.vb: New(ICustomerDomain, IMapper, IAppLogger(Of CustomerApplication))
  fullName: Iktan.Ecommerce.App.Main.CustomerApplication.CustomerApplication(Iktan.Ecommerce.Domain.Interface.ICustomerDomain, AutoMapper.IMapper, Iktan.Ecommerce.Transversal.Common.IAppLogger<Iktan.Ecommerce.App.Main.CustomerApplication>)
  fullName.vb: Iktan.Ecommerce.App.Main.CustomerApplication.New(Iktan.Ecommerce.Domain.Interface.ICustomerDomain, AutoMapper.IMapper, Iktan.Ecommerce.Transversal.Common.IAppLogger(Of Iktan.Ecommerce.App.Main.CustomerApplication))
  nameWithType: CustomerApplication.CustomerApplication(ICustomerDomain, IMapper, IAppLogger<CustomerApplication>)
  nameWithType.vb: CustomerApplication.New(ICustomerDomain, IMapper, IAppLogger(Of CustomerApplication))
- uid: Iktan.Ecommerce.App.Main.CustomerApplication.#ctor*
  name: CustomerApplication
  href: api/Iktan.Ecommerce.App.Main.CustomerApplication.html#Iktan_Ecommerce_App_Main_CustomerApplication__ctor_
  commentId: Overload:Iktan.Ecommerce.App.Main.CustomerApplication.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Iktan.Ecommerce.App.Main.CustomerApplication.CustomerApplication
  fullName.vb: Iktan.Ecommerce.App.Main.CustomerApplication.New
  nameWithType: CustomerApplication.CustomerApplication
  nameWithType.vb: CustomerApplication.New
- uid: Iktan.Ecommerce.App.Main.CustomerApplication.DeleteAsync(System.String)
  name: DeleteAsync(string)
  href: api/Iktan.Ecommerce.App.Main.CustomerApplication.html#Iktan_Ecommerce_App_Main_CustomerApplication_DeleteAsync_System_String_
  commentId: M:Iktan.Ecommerce.App.Main.CustomerApplication.DeleteAsync(System.String)
  name.vb: DeleteAsync(String)
  fullName: Iktan.Ecommerce.App.Main.CustomerApplication.DeleteAsync(string)
  fullName.vb: Iktan.Ecommerce.App.Main.CustomerApplication.DeleteAsync(String)
  nameWithType: CustomerApplication.DeleteAsync(string)
  nameWithType.vb: CustomerApplication.DeleteAsync(String)
- uid: Iktan.Ecommerce.App.Main.CustomerApplication.DeleteAsync*
  name: DeleteAsync
  href: api/Iktan.Ecommerce.App.Main.CustomerApplication.html#Iktan_Ecommerce_App_Main_CustomerApplication_DeleteAsync_
  commentId: Overload:Iktan.Ecommerce.App.Main.CustomerApplication.DeleteAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.Main.CustomerApplication.DeleteAsync
  nameWithType: CustomerApplication.DeleteAsync
- uid: Iktan.Ecommerce.App.Main.CustomerApplication.GetAllAsync
  name: GetAllAsync()
  href: api/Iktan.Ecommerce.App.Main.CustomerApplication.html#Iktan_Ecommerce_App_Main_CustomerApplication_GetAllAsync
  commentId: M:Iktan.Ecommerce.App.Main.CustomerApplication.GetAllAsync
  fullName: Iktan.Ecommerce.App.Main.CustomerApplication.GetAllAsync()
  nameWithType: CustomerApplication.GetAllAsync()
- uid: Iktan.Ecommerce.App.Main.CustomerApplication.GetAllAsync*
  name: GetAllAsync
  href: api/Iktan.Ecommerce.App.Main.CustomerApplication.html#Iktan_Ecommerce_App_Main_CustomerApplication_GetAllAsync_
  commentId: Overload:Iktan.Ecommerce.App.Main.CustomerApplication.GetAllAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.Main.CustomerApplication.GetAllAsync
  nameWithType: CustomerApplication.GetAllAsync
- uid: Iktan.Ecommerce.App.Main.CustomerApplication.GetAsync(System.String)
  name: GetAsync(string)
  href: api/Iktan.Ecommerce.App.Main.CustomerApplication.html#Iktan_Ecommerce_App_Main_CustomerApplication_GetAsync_System_String_
  commentId: M:Iktan.Ecommerce.App.Main.CustomerApplication.GetAsync(System.String)
  name.vb: GetAsync(String)
  fullName: Iktan.Ecommerce.App.Main.CustomerApplication.GetAsync(string)
  fullName.vb: Iktan.Ecommerce.App.Main.CustomerApplication.GetAsync(String)
  nameWithType: CustomerApplication.GetAsync(string)
  nameWithType.vb: CustomerApplication.GetAsync(String)
- uid: Iktan.Ecommerce.App.Main.CustomerApplication.GetAsync*
  name: GetAsync
  href: api/Iktan.Ecommerce.App.Main.CustomerApplication.html#Iktan_Ecommerce_App_Main_CustomerApplication_GetAsync_
  commentId: Overload:Iktan.Ecommerce.App.Main.CustomerApplication.GetAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.Main.CustomerApplication.GetAsync
  nameWithType: CustomerApplication.GetAsync
- uid: Iktan.Ecommerce.App.Main.CustomerApplication.InsertAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  name: InsertAsync(CustomerDTO)
  href: api/Iktan.Ecommerce.App.Main.CustomerApplication.html#Iktan_Ecommerce_App_Main_CustomerApplication_InsertAsync_Iktan_Ecommerce_App_DTO_CustomerDTO_
  commentId: M:Iktan.Ecommerce.App.Main.CustomerApplication.InsertAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  fullName: Iktan.Ecommerce.App.Main.CustomerApplication.InsertAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  nameWithType: CustomerApplication.InsertAsync(CustomerDTO)
- uid: Iktan.Ecommerce.App.Main.CustomerApplication.InsertAsync*
  name: InsertAsync
  href: api/Iktan.Ecommerce.App.Main.CustomerApplication.html#Iktan_Ecommerce_App_Main_CustomerApplication_InsertAsync_
  commentId: Overload:Iktan.Ecommerce.App.Main.CustomerApplication.InsertAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.Main.CustomerApplication.InsertAsync
  nameWithType: CustomerApplication.InsertAsync
- uid: Iktan.Ecommerce.App.Main.CustomerApplication.UpdateAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  name: UpdateAsync(CustomerDTO)
  href: api/Iktan.Ecommerce.App.Main.CustomerApplication.html#Iktan_Ecommerce_App_Main_CustomerApplication_UpdateAsync_Iktan_Ecommerce_App_DTO_CustomerDTO_
  commentId: M:Iktan.Ecommerce.App.Main.CustomerApplication.UpdateAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  fullName: Iktan.Ecommerce.App.Main.CustomerApplication.UpdateAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  nameWithType: CustomerApplication.UpdateAsync(CustomerDTO)
- uid: Iktan.Ecommerce.App.Main.CustomerApplication.UpdateAsync*
  name: UpdateAsync
  href: api/Iktan.Ecommerce.App.Main.CustomerApplication.html#Iktan_Ecommerce_App_Main_CustomerApplication_UpdateAsync_
  commentId: Overload:Iktan.Ecommerce.App.Main.CustomerApplication.UpdateAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.Main.CustomerApplication.UpdateAsync
  nameWithType: CustomerApplication.UpdateAsync
- uid: Iktan.Ecommerce.App.Main.UserApplication
  name: UserApplication
  href: api/Iktan.Ecommerce.App.Main.UserApplication.html
  commentId: T:Iktan.Ecommerce.App.Main.UserApplication
  fullName: Iktan.Ecommerce.App.Main.UserApplication
  nameWithType: UserApplication
- uid: Iktan.Ecommerce.App.Main.UserApplication.#ctor(Iktan.Ecommerce.Domain.Interface.IUserDomain,AutoMapper.IMapper,Iktan.Ecommerce.App.Validation.UserDtoValidator)
  name: UserApplication(IUserDomain, IMapper, UserDtoValidator)
  href: api/Iktan.Ecommerce.App.Main.UserApplication.html#Iktan_Ecommerce_App_Main_UserApplication__ctor_Iktan_Ecommerce_Domain_Interface_IUserDomain_AutoMapper_IMapper_Iktan_Ecommerce_App_Validation_UserDtoValidator_
  commentId: M:Iktan.Ecommerce.App.Main.UserApplication.#ctor(Iktan.Ecommerce.Domain.Interface.IUserDomain,AutoMapper.IMapper,Iktan.Ecommerce.App.Validation.UserDtoValidator)
  name.vb: New(IUserDomain, IMapper, UserDtoValidator)
  fullName: Iktan.Ecommerce.App.Main.UserApplication.UserApplication(Iktan.Ecommerce.Domain.Interface.IUserDomain, AutoMapper.IMapper, Iktan.Ecommerce.App.Validation.UserDtoValidator)
  fullName.vb: Iktan.Ecommerce.App.Main.UserApplication.New(Iktan.Ecommerce.Domain.Interface.IUserDomain, AutoMapper.IMapper, Iktan.Ecommerce.App.Validation.UserDtoValidator)
  nameWithType: UserApplication.UserApplication(IUserDomain, IMapper, UserDtoValidator)
  nameWithType.vb: UserApplication.New(IUserDomain, IMapper, UserDtoValidator)
- uid: Iktan.Ecommerce.App.Main.UserApplication.#ctor*
  name: UserApplication
  href: api/Iktan.Ecommerce.App.Main.UserApplication.html#Iktan_Ecommerce_App_Main_UserApplication__ctor_
  commentId: Overload:Iktan.Ecommerce.App.Main.UserApplication.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Iktan.Ecommerce.App.Main.UserApplication.UserApplication
  fullName.vb: Iktan.Ecommerce.App.Main.UserApplication.New
  nameWithType: UserApplication.UserApplication
  nameWithType.vb: UserApplication.New
- uid: Iktan.Ecommerce.App.Main.UserApplication.Authenticate(System.String,System.String)
  name: Authenticate(string, string)
  href: api/Iktan.Ecommerce.App.Main.UserApplication.html#Iktan_Ecommerce_App_Main_UserApplication_Authenticate_System_String_System_String_
  commentId: M:Iktan.Ecommerce.App.Main.UserApplication.Authenticate(System.String,System.String)
  name.vb: Authenticate(String, String)
  fullName: Iktan.Ecommerce.App.Main.UserApplication.Authenticate(string, string)
  fullName.vb: Iktan.Ecommerce.App.Main.UserApplication.Authenticate(String, String)
  nameWithType: UserApplication.Authenticate(string, string)
  nameWithType.vb: UserApplication.Authenticate(String, String)
- uid: Iktan.Ecommerce.App.Main.UserApplication.Authenticate*
  name: Authenticate
  href: api/Iktan.Ecommerce.App.Main.UserApplication.html#Iktan_Ecommerce_App_Main_UserApplication_Authenticate_
  commentId: Overload:Iktan.Ecommerce.App.Main.UserApplication.Authenticate
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.Main.UserApplication.Authenticate
  nameWithType: UserApplication.Authenticate
- uid: Iktan.Ecommerce.App.Test
  name: Iktan.Ecommerce.App.Test
  href: api/Iktan.Ecommerce.App.Test.html
  commentId: N:Iktan.Ecommerce.App.Test
  fullName: Iktan.Ecommerce.App.Test
  nameWithType: Iktan.Ecommerce.App.Test
- uid: Iktan.Ecommerce.App.Test.CustomWebApplicationFactory
  name: CustomWebApplicationFactory
  href: api/Iktan.Ecommerce.App.Test.CustomWebApplicationFactory.html
  commentId: T:Iktan.Ecommerce.App.Test.CustomWebApplicationFactory
  fullName: Iktan.Ecommerce.App.Test.CustomWebApplicationFactory
  nameWithType: CustomWebApplicationFactory
- uid: Iktan.Ecommerce.App.Test.CustomWebApplicationFactory.ConfigureWebHost(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  name: ConfigureWebHost(IWebHostBuilder)
  href: api/Iktan.Ecommerce.App.Test.CustomWebApplicationFactory.html#Iktan_Ecommerce_App_Test_CustomWebApplicationFactory_ConfigureWebHost_Microsoft_AspNetCore_Hosting_IWebHostBuilder_
  commentId: M:Iktan.Ecommerce.App.Test.CustomWebApplicationFactory.ConfigureWebHost(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  fullName: Iktan.Ecommerce.App.Test.CustomWebApplicationFactory.ConfigureWebHost(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  nameWithType: CustomWebApplicationFactory.ConfigureWebHost(IWebHostBuilder)
- uid: Iktan.Ecommerce.App.Test.CustomWebApplicationFactory.ConfigureWebHost*
  name: ConfigureWebHost
  href: api/Iktan.Ecommerce.App.Test.CustomWebApplicationFactory.html#Iktan_Ecommerce_App_Test_CustomWebApplicationFactory_ConfigureWebHost_
  commentId: Overload:Iktan.Ecommerce.App.Test.CustomWebApplicationFactory.ConfigureWebHost
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.Test.CustomWebApplicationFactory.ConfigureWebHost
  nameWithType: CustomWebApplicationFactory.ConfigureWebHost
- uid: Iktan.Ecommerce.App.Test.UserApplicationTest
  name: UserApplicationTest
  href: api/Iktan.Ecommerce.App.Test.UserApplicationTest.html
  commentId: T:Iktan.Ecommerce.App.Test.UserApplicationTest
  fullName: Iktan.Ecommerce.App.Test.UserApplicationTest
  nameWithType: UserApplicationTest
- uid: Iktan.Ecommerce.App.Test.UserApplicationTest.Authenticate_WhenIncorrectParametersAreSent_ReturnsMessageUserDoesNotExist
  name: Authenticate_WhenIncorrectParametersAreSent_ReturnsMessageUserDoesNotExist()
  href: api/Iktan.Ecommerce.App.Test.UserApplicationTest.html#Iktan_Ecommerce_App_Test_UserApplicationTest_Authenticate_WhenIncorrectParametersAreSent_ReturnsMessageUserDoesNotExist
  commentId: M:Iktan.Ecommerce.App.Test.UserApplicationTest.Authenticate_WhenIncorrectParametersAreSent_ReturnsMessageUserDoesNotExist
  fullName: Iktan.Ecommerce.App.Test.UserApplicationTest.Authenticate_WhenIncorrectParametersAreSent_ReturnsMessageUserDoesNotExist()
  nameWithType: UserApplicationTest.Authenticate_WhenIncorrectParametersAreSent_ReturnsMessageUserDoesNotExist()
- uid: Iktan.Ecommerce.App.Test.UserApplicationTest.Authenticate_WhenIncorrectParametersAreSent_ReturnsMessageUserDoesNotExist*
  name: Authenticate_WhenIncorrectParametersAreSent_ReturnsMessageUserDoesNotExist
  href: api/Iktan.Ecommerce.App.Test.UserApplicationTest.html#Iktan_Ecommerce_App_Test_UserApplicationTest_Authenticate_WhenIncorrectParametersAreSent_ReturnsMessageUserDoesNotExist_
  commentId: Overload:Iktan.Ecommerce.App.Test.UserApplicationTest.Authenticate_WhenIncorrectParametersAreSent_ReturnsMessageUserDoesNotExist
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.Test.UserApplicationTest.Authenticate_WhenIncorrectParametersAreSent_ReturnsMessageUserDoesNotExist
  nameWithType: UserApplicationTest.Authenticate_WhenIncorrectParametersAreSent_ReturnsMessageUserDoesNotExist
- uid: Iktan.Ecommerce.App.Test.UserApplicationTest.Authenticate_WhenNoParametersAreSent_ValidationErrorMessageIsReturned
  name: Authenticate_WhenNoParametersAreSent_ValidationErrorMessageIsReturned()
  href: api/Iktan.Ecommerce.App.Test.UserApplicationTest.html#Iktan_Ecommerce_App_Test_UserApplicationTest_Authenticate_WhenNoParametersAreSent_ValidationErrorMessageIsReturned
  commentId: M:Iktan.Ecommerce.App.Test.UserApplicationTest.Authenticate_WhenNoParametersAreSent_ValidationErrorMessageIsReturned
  fullName: Iktan.Ecommerce.App.Test.UserApplicationTest.Authenticate_WhenNoParametersAreSent_ValidationErrorMessageIsReturned()
  nameWithType: UserApplicationTest.Authenticate_WhenNoParametersAreSent_ValidationErrorMessageIsReturned()
- uid: Iktan.Ecommerce.App.Test.UserApplicationTest.Authenticate_WhenNoParametersAreSent_ValidationErrorMessageIsReturned*
  name: Authenticate_WhenNoParametersAreSent_ValidationErrorMessageIsReturned
  href: api/Iktan.Ecommerce.App.Test.UserApplicationTest.html#Iktan_Ecommerce_App_Test_UserApplicationTest_Authenticate_WhenNoParametersAreSent_ValidationErrorMessageIsReturned_
  commentId: Overload:Iktan.Ecommerce.App.Test.UserApplicationTest.Authenticate_WhenNoParametersAreSent_ValidationErrorMessageIsReturned
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.Test.UserApplicationTest.Authenticate_WhenNoParametersAreSent_ValidationErrorMessageIsReturned
  nameWithType: UserApplicationTest.Authenticate_WhenNoParametersAreSent_ValidationErrorMessageIsReturned
- uid: Iktan.Ecommerce.App.Test.UserApplicationTest.Authenticate_WhenParametersAreSent_ReturnsSuccessfulMessage
  name: Authenticate_WhenParametersAreSent_ReturnsSuccessfulMessage()
  href: api/Iktan.Ecommerce.App.Test.UserApplicationTest.html#Iktan_Ecommerce_App_Test_UserApplicationTest_Authenticate_WhenParametersAreSent_ReturnsSuccessfulMessage
  commentId: M:Iktan.Ecommerce.App.Test.UserApplicationTest.Authenticate_WhenParametersAreSent_ReturnsSuccessfulMessage
  fullName: Iktan.Ecommerce.App.Test.UserApplicationTest.Authenticate_WhenParametersAreSent_ReturnsSuccessfulMessage()
  nameWithType: UserApplicationTest.Authenticate_WhenParametersAreSent_ReturnsSuccessfulMessage()
- uid: Iktan.Ecommerce.App.Test.UserApplicationTest.Authenticate_WhenParametersAreSent_ReturnsSuccessfulMessage*
  name: Authenticate_WhenParametersAreSent_ReturnsSuccessfulMessage
  href: api/Iktan.Ecommerce.App.Test.UserApplicationTest.html#Iktan_Ecommerce_App_Test_UserApplicationTest_Authenticate_WhenParametersAreSent_ReturnsSuccessfulMessage_
  commentId: Overload:Iktan.Ecommerce.App.Test.UserApplicationTest.Authenticate_WhenParametersAreSent_ReturnsSuccessfulMessage
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.Test.UserApplicationTest.Authenticate_WhenParametersAreSent_ReturnsSuccessfulMessage
  nameWithType: UserApplicationTest.Authenticate_WhenParametersAreSent_ReturnsSuccessfulMessage
- uid: Iktan.Ecommerce.App.Test.UserApplicationTest.ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  name: ClassInitialize(TestContext)
  href: api/Iktan.Ecommerce.App.Test.UserApplicationTest.html#Iktan_Ecommerce_App_Test_UserApplicationTest_ClassInitialize_Microsoft_VisualStudio_TestTools_UnitTesting_TestContext_
  commentId: M:Iktan.Ecommerce.App.Test.UserApplicationTest.ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  fullName: Iktan.Ecommerce.App.Test.UserApplicationTest.ClassInitialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
  nameWithType: UserApplicationTest.ClassInitialize(TestContext)
- uid: Iktan.Ecommerce.App.Test.UserApplicationTest.ClassInitialize*
  name: ClassInitialize
  href: api/Iktan.Ecommerce.App.Test.UserApplicationTest.html#Iktan_Ecommerce_App_Test_UserApplicationTest_ClassInitialize_
  commentId: Overload:Iktan.Ecommerce.App.Test.UserApplicationTest.ClassInitialize
  isSpec: "True"
  fullName: Iktan.Ecommerce.App.Test.UserApplicationTest.ClassInitialize
  nameWithType: UserApplicationTest.ClassInitialize
- uid: Iktan.Ecommerce.App.Validation
  name: Iktan.Ecommerce.App.Validation
  href: api/Iktan.Ecommerce.App.Validation.html
  commentId: N:Iktan.Ecommerce.App.Validation
  fullName: Iktan.Ecommerce.App.Validation
  nameWithType: Iktan.Ecommerce.App.Validation
- uid: Iktan.Ecommerce.App.Validation.UserDtoValidator
  name: UserDtoValidator
  href: api/Iktan.Ecommerce.App.Validation.UserDtoValidator.html
  commentId: T:Iktan.Ecommerce.App.Validation.UserDtoValidator
  fullName: Iktan.Ecommerce.App.Validation.UserDtoValidator
  nameWithType: UserDtoValidator
- uid: Iktan.Ecommerce.App.Validation.UserDtoValidator.#ctor
  name: UserDtoValidator()
  href: api/Iktan.Ecommerce.App.Validation.UserDtoValidator.html#Iktan_Ecommerce_App_Validation_UserDtoValidator__ctor
  commentId: M:Iktan.Ecommerce.App.Validation.UserDtoValidator.#ctor
  name.vb: New()
  fullName: Iktan.Ecommerce.App.Validation.UserDtoValidator.UserDtoValidator()
  fullName.vb: Iktan.Ecommerce.App.Validation.UserDtoValidator.New()
  nameWithType: UserDtoValidator.UserDtoValidator()
  nameWithType.vb: UserDtoValidator.New()
- uid: Iktan.Ecommerce.App.Validation.UserDtoValidator.#ctor*
  name: UserDtoValidator
  href: api/Iktan.Ecommerce.App.Validation.UserDtoValidator.html#Iktan_Ecommerce_App_Validation_UserDtoValidator__ctor_
  commentId: Overload:Iktan.Ecommerce.App.Validation.UserDtoValidator.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Iktan.Ecommerce.App.Validation.UserDtoValidator.UserDtoValidator
  fullName.vb: Iktan.Ecommerce.App.Validation.UserDtoValidator.New
  nameWithType: UserDtoValidator.UserDtoValidator
  nameWithType.vb: UserDtoValidator.New
- uid: Iktan.Ecommerce.Domain.Core
  name: Iktan.Ecommerce.Domain.Core
  href: api/Iktan.Ecommerce.Domain.Core.html
  commentId: N:Iktan.Ecommerce.Domain.Core
  fullName: Iktan.Ecommerce.Domain.Core
  nameWithType: Iktan.Ecommerce.Domain.Core
- uid: Iktan.Ecommerce.Domain.Core.CustomerDomain
  name: CustomerDomain
  href: api/Iktan.Ecommerce.Domain.Core.CustomerDomain.html
  commentId: T:Iktan.Ecommerce.Domain.Core.CustomerDomain
  fullName: Iktan.Ecommerce.Domain.Core.CustomerDomain
  nameWithType: CustomerDomain
- uid: Iktan.Ecommerce.Domain.Core.CustomerDomain.#ctor(Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository)
  name: CustomerDomain(ICustomerRepository)
  href: api/Iktan.Ecommerce.Domain.Core.CustomerDomain.html#Iktan_Ecommerce_Domain_Core_CustomerDomain__ctor_Iktan_Ecommerce_Infraestructure_Interface_ICustomerRepository_
  commentId: M:Iktan.Ecommerce.Domain.Core.CustomerDomain.#ctor(Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository)
  name.vb: New(ICustomerRepository)
  fullName: Iktan.Ecommerce.Domain.Core.CustomerDomain.CustomerDomain(Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository)
  fullName.vb: Iktan.Ecommerce.Domain.Core.CustomerDomain.New(Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository)
  nameWithType: CustomerDomain.CustomerDomain(ICustomerRepository)
  nameWithType.vb: CustomerDomain.New(ICustomerRepository)
- uid: Iktan.Ecommerce.Domain.Core.CustomerDomain.#ctor*
  name: CustomerDomain
  href: api/Iktan.Ecommerce.Domain.Core.CustomerDomain.html#Iktan_Ecommerce_Domain_Core_CustomerDomain__ctor_
  commentId: Overload:Iktan.Ecommerce.Domain.Core.CustomerDomain.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Iktan.Ecommerce.Domain.Core.CustomerDomain.CustomerDomain
  fullName.vb: Iktan.Ecommerce.Domain.Core.CustomerDomain.New
  nameWithType: CustomerDomain.CustomerDomain
  nameWithType.vb: CustomerDomain.New
- uid: Iktan.Ecommerce.Domain.Core.CustomerDomain.DeleteAsync(System.String)
  name: DeleteAsync(string)
  href: api/Iktan.Ecommerce.Domain.Core.CustomerDomain.html#Iktan_Ecommerce_Domain_Core_CustomerDomain_DeleteAsync_System_String_
  commentId: M:Iktan.Ecommerce.Domain.Core.CustomerDomain.DeleteAsync(System.String)
  name.vb: DeleteAsync(String)
  fullName: Iktan.Ecommerce.Domain.Core.CustomerDomain.DeleteAsync(string)
  fullName.vb: Iktan.Ecommerce.Domain.Core.CustomerDomain.DeleteAsync(String)
  nameWithType: CustomerDomain.DeleteAsync(string)
  nameWithType.vb: CustomerDomain.DeleteAsync(String)
- uid: Iktan.Ecommerce.Domain.Core.CustomerDomain.DeleteAsync*
  name: DeleteAsync
  href: api/Iktan.Ecommerce.Domain.Core.CustomerDomain.html#Iktan_Ecommerce_Domain_Core_CustomerDomain_DeleteAsync_
  commentId: Overload:Iktan.Ecommerce.Domain.Core.CustomerDomain.DeleteAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Core.CustomerDomain.DeleteAsync
  nameWithType: CustomerDomain.DeleteAsync
- uid: Iktan.Ecommerce.Domain.Core.CustomerDomain.GetAllAsync
  name: GetAllAsync()
  href: api/Iktan.Ecommerce.Domain.Core.CustomerDomain.html#Iktan_Ecommerce_Domain_Core_CustomerDomain_GetAllAsync
  commentId: M:Iktan.Ecommerce.Domain.Core.CustomerDomain.GetAllAsync
  fullName: Iktan.Ecommerce.Domain.Core.CustomerDomain.GetAllAsync()
  nameWithType: CustomerDomain.GetAllAsync()
- uid: Iktan.Ecommerce.Domain.Core.CustomerDomain.GetAllAsync*
  name: GetAllAsync
  href: api/Iktan.Ecommerce.Domain.Core.CustomerDomain.html#Iktan_Ecommerce_Domain_Core_CustomerDomain_GetAllAsync_
  commentId: Overload:Iktan.Ecommerce.Domain.Core.CustomerDomain.GetAllAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Core.CustomerDomain.GetAllAsync
  nameWithType: CustomerDomain.GetAllAsync
- uid: Iktan.Ecommerce.Domain.Core.CustomerDomain.GetAsync(System.String)
  name: GetAsync(string)
  href: api/Iktan.Ecommerce.Domain.Core.CustomerDomain.html#Iktan_Ecommerce_Domain_Core_CustomerDomain_GetAsync_System_String_
  commentId: M:Iktan.Ecommerce.Domain.Core.CustomerDomain.GetAsync(System.String)
  name.vb: GetAsync(String)
  fullName: Iktan.Ecommerce.Domain.Core.CustomerDomain.GetAsync(string)
  fullName.vb: Iktan.Ecommerce.Domain.Core.CustomerDomain.GetAsync(String)
  nameWithType: CustomerDomain.GetAsync(string)
  nameWithType.vb: CustomerDomain.GetAsync(String)
- uid: Iktan.Ecommerce.Domain.Core.CustomerDomain.GetAsync*
  name: GetAsync
  href: api/Iktan.Ecommerce.Domain.Core.CustomerDomain.html#Iktan_Ecommerce_Domain_Core_CustomerDomain_GetAsync_
  commentId: Overload:Iktan.Ecommerce.Domain.Core.CustomerDomain.GetAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Core.CustomerDomain.GetAsync
  nameWithType: CustomerDomain.GetAsync
- uid: Iktan.Ecommerce.Domain.Core.CustomerDomain.InsertAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  name: InsertAsync(Customers)
  href: api/Iktan.Ecommerce.Domain.Core.CustomerDomain.html#Iktan_Ecommerce_Domain_Core_CustomerDomain_InsertAsync_Iktan_Ecommerce_Domain_Entity_Customers_
  commentId: M:Iktan.Ecommerce.Domain.Core.CustomerDomain.InsertAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  fullName: Iktan.Ecommerce.Domain.Core.CustomerDomain.InsertAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  nameWithType: CustomerDomain.InsertAsync(Customers)
- uid: Iktan.Ecommerce.Domain.Core.CustomerDomain.InsertAsync*
  name: InsertAsync
  href: api/Iktan.Ecommerce.Domain.Core.CustomerDomain.html#Iktan_Ecommerce_Domain_Core_CustomerDomain_InsertAsync_
  commentId: Overload:Iktan.Ecommerce.Domain.Core.CustomerDomain.InsertAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Core.CustomerDomain.InsertAsync
  nameWithType: CustomerDomain.InsertAsync
- uid: Iktan.Ecommerce.Domain.Core.CustomerDomain.UpdateAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  name: UpdateAsync(Customers)
  href: api/Iktan.Ecommerce.Domain.Core.CustomerDomain.html#Iktan_Ecommerce_Domain_Core_CustomerDomain_UpdateAsync_Iktan_Ecommerce_Domain_Entity_Customers_
  commentId: M:Iktan.Ecommerce.Domain.Core.CustomerDomain.UpdateAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  fullName: Iktan.Ecommerce.Domain.Core.CustomerDomain.UpdateAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  nameWithType: CustomerDomain.UpdateAsync(Customers)
- uid: Iktan.Ecommerce.Domain.Core.CustomerDomain.UpdateAsync*
  name: UpdateAsync
  href: api/Iktan.Ecommerce.Domain.Core.CustomerDomain.html#Iktan_Ecommerce_Domain_Core_CustomerDomain_UpdateAsync_
  commentId: Overload:Iktan.Ecommerce.Domain.Core.CustomerDomain.UpdateAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Core.CustomerDomain.UpdateAsync
  nameWithType: CustomerDomain.UpdateAsync
- uid: Iktan.Ecommerce.Domain.Core.UserDomain
  name: UserDomain
  href: api/Iktan.Ecommerce.Domain.Core.UserDomain.html
  commentId: T:Iktan.Ecommerce.Domain.Core.UserDomain
  fullName: Iktan.Ecommerce.Domain.Core.UserDomain
  nameWithType: UserDomain
- uid: Iktan.Ecommerce.Domain.Core.UserDomain.#ctor(Iktan.Ecommerce.Infraestructure.Interface.IUserRepository)
  name: UserDomain(IUserRepository)
  href: api/Iktan.Ecommerce.Domain.Core.UserDomain.html#Iktan_Ecommerce_Domain_Core_UserDomain__ctor_Iktan_Ecommerce_Infraestructure_Interface_IUserRepository_
  commentId: M:Iktan.Ecommerce.Domain.Core.UserDomain.#ctor(Iktan.Ecommerce.Infraestructure.Interface.IUserRepository)
  name.vb: New(IUserRepository)
  fullName: Iktan.Ecommerce.Domain.Core.UserDomain.UserDomain(Iktan.Ecommerce.Infraestructure.Interface.IUserRepository)
  fullName.vb: Iktan.Ecommerce.Domain.Core.UserDomain.New(Iktan.Ecommerce.Infraestructure.Interface.IUserRepository)
  nameWithType: UserDomain.UserDomain(IUserRepository)
  nameWithType.vb: UserDomain.New(IUserRepository)
- uid: Iktan.Ecommerce.Domain.Core.UserDomain.#ctor*
  name: UserDomain
  href: api/Iktan.Ecommerce.Domain.Core.UserDomain.html#Iktan_Ecommerce_Domain_Core_UserDomain__ctor_
  commentId: Overload:Iktan.Ecommerce.Domain.Core.UserDomain.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Iktan.Ecommerce.Domain.Core.UserDomain.UserDomain
  fullName.vb: Iktan.Ecommerce.Domain.Core.UserDomain.New
  nameWithType: UserDomain.UserDomain
  nameWithType.vb: UserDomain.New
- uid: Iktan.Ecommerce.Domain.Core.UserDomain.Authenticate(System.String,System.String)
  name: Authenticate(string, string)
  href: api/Iktan.Ecommerce.Domain.Core.UserDomain.html#Iktan_Ecommerce_Domain_Core_UserDomain_Authenticate_System_String_System_String_
  commentId: M:Iktan.Ecommerce.Domain.Core.UserDomain.Authenticate(System.String,System.String)
  name.vb: Authenticate(String, String)
  fullName: Iktan.Ecommerce.Domain.Core.UserDomain.Authenticate(string, string)
  fullName.vb: Iktan.Ecommerce.Domain.Core.UserDomain.Authenticate(String, String)
  nameWithType: UserDomain.Authenticate(string, string)
  nameWithType.vb: UserDomain.Authenticate(String, String)
- uid: Iktan.Ecommerce.Domain.Core.UserDomain.Authenticate*
  name: Authenticate
  href: api/Iktan.Ecommerce.Domain.Core.UserDomain.html#Iktan_Ecommerce_Domain_Core_UserDomain_Authenticate_
  commentId: Overload:Iktan.Ecommerce.Domain.Core.UserDomain.Authenticate
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Core.UserDomain.Authenticate
  nameWithType: UserDomain.Authenticate
- uid: Iktan.Ecommerce.Domain.Entity
  name: Iktan.Ecommerce.Domain.Entity
  href: api/Iktan.Ecommerce.Domain.Entity.html
  commentId: N:Iktan.Ecommerce.Domain.Entity
  fullName: Iktan.Ecommerce.Domain.Entity
  nameWithType: Iktan.Ecommerce.Domain.Entity
- uid: Iktan.Ecommerce.Domain.Entity.Customers
  name: Customers
  href: api/Iktan.Ecommerce.Domain.Entity.Customers.html
  commentId: T:Iktan.Ecommerce.Domain.Entity.Customers
  fullName: Iktan.Ecommerce.Domain.Entity.Customers
  nameWithType: Customers
- uid: Iktan.Ecommerce.Domain.Entity.Customers.Address
  name: Address
  href: api/Iktan.Ecommerce.Domain.Entity.Customers.html#Iktan_Ecommerce_Domain_Entity_Customers_Address
  commentId: P:Iktan.Ecommerce.Domain.Entity.Customers.Address
  fullName: Iktan.Ecommerce.Domain.Entity.Customers.Address
  nameWithType: Customers.Address
- uid: Iktan.Ecommerce.Domain.Entity.Customers.Address*
  name: Address
  href: api/Iktan.Ecommerce.Domain.Entity.Customers.html#Iktan_Ecommerce_Domain_Entity_Customers_Address_
  commentId: Overload:Iktan.Ecommerce.Domain.Entity.Customers.Address
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Entity.Customers.Address
  nameWithType: Customers.Address
- uid: Iktan.Ecommerce.Domain.Entity.Customers.City
  name: City
  href: api/Iktan.Ecommerce.Domain.Entity.Customers.html#Iktan_Ecommerce_Domain_Entity_Customers_City
  commentId: P:Iktan.Ecommerce.Domain.Entity.Customers.City
  fullName: Iktan.Ecommerce.Domain.Entity.Customers.City
  nameWithType: Customers.City
- uid: Iktan.Ecommerce.Domain.Entity.Customers.City*
  name: City
  href: api/Iktan.Ecommerce.Domain.Entity.Customers.html#Iktan_Ecommerce_Domain_Entity_Customers_City_
  commentId: Overload:Iktan.Ecommerce.Domain.Entity.Customers.City
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Entity.Customers.City
  nameWithType: Customers.City
- uid: Iktan.Ecommerce.Domain.Entity.Customers.CompanyName
  name: CompanyName
  href: api/Iktan.Ecommerce.Domain.Entity.Customers.html#Iktan_Ecommerce_Domain_Entity_Customers_CompanyName
  commentId: P:Iktan.Ecommerce.Domain.Entity.Customers.CompanyName
  fullName: Iktan.Ecommerce.Domain.Entity.Customers.CompanyName
  nameWithType: Customers.CompanyName
- uid: Iktan.Ecommerce.Domain.Entity.Customers.CompanyName*
  name: CompanyName
  href: api/Iktan.Ecommerce.Domain.Entity.Customers.html#Iktan_Ecommerce_Domain_Entity_Customers_CompanyName_
  commentId: Overload:Iktan.Ecommerce.Domain.Entity.Customers.CompanyName
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Entity.Customers.CompanyName
  nameWithType: Customers.CompanyName
- uid: Iktan.Ecommerce.Domain.Entity.Customers.ContactName
  name: ContactName
  href: api/Iktan.Ecommerce.Domain.Entity.Customers.html#Iktan_Ecommerce_Domain_Entity_Customers_ContactName
  commentId: P:Iktan.Ecommerce.Domain.Entity.Customers.ContactName
  fullName: Iktan.Ecommerce.Domain.Entity.Customers.ContactName
  nameWithType: Customers.ContactName
- uid: Iktan.Ecommerce.Domain.Entity.Customers.ContactName*
  name: ContactName
  href: api/Iktan.Ecommerce.Domain.Entity.Customers.html#Iktan_Ecommerce_Domain_Entity_Customers_ContactName_
  commentId: Overload:Iktan.Ecommerce.Domain.Entity.Customers.ContactName
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Entity.Customers.ContactName
  nameWithType: Customers.ContactName
- uid: Iktan.Ecommerce.Domain.Entity.Customers.ContactTitle
  name: ContactTitle
  href: api/Iktan.Ecommerce.Domain.Entity.Customers.html#Iktan_Ecommerce_Domain_Entity_Customers_ContactTitle
  commentId: P:Iktan.Ecommerce.Domain.Entity.Customers.ContactTitle
  fullName: Iktan.Ecommerce.Domain.Entity.Customers.ContactTitle
  nameWithType: Customers.ContactTitle
- uid: Iktan.Ecommerce.Domain.Entity.Customers.ContactTitle*
  name: ContactTitle
  href: api/Iktan.Ecommerce.Domain.Entity.Customers.html#Iktan_Ecommerce_Domain_Entity_Customers_ContactTitle_
  commentId: Overload:Iktan.Ecommerce.Domain.Entity.Customers.ContactTitle
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Entity.Customers.ContactTitle
  nameWithType: Customers.ContactTitle
- uid: Iktan.Ecommerce.Domain.Entity.Customers.Country
  name: Country
  href: api/Iktan.Ecommerce.Domain.Entity.Customers.html#Iktan_Ecommerce_Domain_Entity_Customers_Country
  commentId: P:Iktan.Ecommerce.Domain.Entity.Customers.Country
  fullName: Iktan.Ecommerce.Domain.Entity.Customers.Country
  nameWithType: Customers.Country
- uid: Iktan.Ecommerce.Domain.Entity.Customers.Country*
  name: Country
  href: api/Iktan.Ecommerce.Domain.Entity.Customers.html#Iktan_Ecommerce_Domain_Entity_Customers_Country_
  commentId: Overload:Iktan.Ecommerce.Domain.Entity.Customers.Country
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Entity.Customers.Country
  nameWithType: Customers.Country
- uid: Iktan.Ecommerce.Domain.Entity.Customers.CustomerId
  name: CustomerId
  href: api/Iktan.Ecommerce.Domain.Entity.Customers.html#Iktan_Ecommerce_Domain_Entity_Customers_CustomerId
  commentId: P:Iktan.Ecommerce.Domain.Entity.Customers.CustomerId
  fullName: Iktan.Ecommerce.Domain.Entity.Customers.CustomerId
  nameWithType: Customers.CustomerId
- uid: Iktan.Ecommerce.Domain.Entity.Customers.CustomerId*
  name: CustomerId
  href: api/Iktan.Ecommerce.Domain.Entity.Customers.html#Iktan_Ecommerce_Domain_Entity_Customers_CustomerId_
  commentId: Overload:Iktan.Ecommerce.Domain.Entity.Customers.CustomerId
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Entity.Customers.CustomerId
  nameWithType: Customers.CustomerId
- uid: Iktan.Ecommerce.Domain.Entity.Customers.Fax
  name: Fax
  href: api/Iktan.Ecommerce.Domain.Entity.Customers.html#Iktan_Ecommerce_Domain_Entity_Customers_Fax
  commentId: P:Iktan.Ecommerce.Domain.Entity.Customers.Fax
  fullName: Iktan.Ecommerce.Domain.Entity.Customers.Fax
  nameWithType: Customers.Fax
- uid: Iktan.Ecommerce.Domain.Entity.Customers.Fax*
  name: Fax
  href: api/Iktan.Ecommerce.Domain.Entity.Customers.html#Iktan_Ecommerce_Domain_Entity_Customers_Fax_
  commentId: Overload:Iktan.Ecommerce.Domain.Entity.Customers.Fax
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Entity.Customers.Fax
  nameWithType: Customers.Fax
- uid: Iktan.Ecommerce.Domain.Entity.Customers.Phone
  name: Phone
  href: api/Iktan.Ecommerce.Domain.Entity.Customers.html#Iktan_Ecommerce_Domain_Entity_Customers_Phone
  commentId: P:Iktan.Ecommerce.Domain.Entity.Customers.Phone
  fullName: Iktan.Ecommerce.Domain.Entity.Customers.Phone
  nameWithType: Customers.Phone
- uid: Iktan.Ecommerce.Domain.Entity.Customers.Phone*
  name: Phone
  href: api/Iktan.Ecommerce.Domain.Entity.Customers.html#Iktan_Ecommerce_Domain_Entity_Customers_Phone_
  commentId: Overload:Iktan.Ecommerce.Domain.Entity.Customers.Phone
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Entity.Customers.Phone
  nameWithType: Customers.Phone
- uid: Iktan.Ecommerce.Domain.Entity.Customers.PostalCode
  name: PostalCode
  href: api/Iktan.Ecommerce.Domain.Entity.Customers.html#Iktan_Ecommerce_Domain_Entity_Customers_PostalCode
  commentId: P:Iktan.Ecommerce.Domain.Entity.Customers.PostalCode
  fullName: Iktan.Ecommerce.Domain.Entity.Customers.PostalCode
  nameWithType: Customers.PostalCode
- uid: Iktan.Ecommerce.Domain.Entity.Customers.PostalCode*
  name: PostalCode
  href: api/Iktan.Ecommerce.Domain.Entity.Customers.html#Iktan_Ecommerce_Domain_Entity_Customers_PostalCode_
  commentId: Overload:Iktan.Ecommerce.Domain.Entity.Customers.PostalCode
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Entity.Customers.PostalCode
  nameWithType: Customers.PostalCode
- uid: Iktan.Ecommerce.Domain.Entity.Customers.Region
  name: Region
  href: api/Iktan.Ecommerce.Domain.Entity.Customers.html#Iktan_Ecommerce_Domain_Entity_Customers_Region
  commentId: P:Iktan.Ecommerce.Domain.Entity.Customers.Region
  fullName: Iktan.Ecommerce.Domain.Entity.Customers.Region
  nameWithType: Customers.Region
- uid: Iktan.Ecommerce.Domain.Entity.Customers.Region*
  name: Region
  href: api/Iktan.Ecommerce.Domain.Entity.Customers.html#Iktan_Ecommerce_Domain_Entity_Customers_Region_
  commentId: Overload:Iktan.Ecommerce.Domain.Entity.Customers.Region
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Entity.Customers.Region
  nameWithType: Customers.Region
- uid: Iktan.Ecommerce.Domain.Entity.Users
  name: Users
  href: api/Iktan.Ecommerce.Domain.Entity.Users.html
  commentId: T:Iktan.Ecommerce.Domain.Entity.Users
  fullName: Iktan.Ecommerce.Domain.Entity.Users
  nameWithType: Users
- uid: Iktan.Ecommerce.Domain.Entity.Users.FirstName
  name: FirstName
  href: api/Iktan.Ecommerce.Domain.Entity.Users.html#Iktan_Ecommerce_Domain_Entity_Users_FirstName
  commentId: P:Iktan.Ecommerce.Domain.Entity.Users.FirstName
  fullName: Iktan.Ecommerce.Domain.Entity.Users.FirstName
  nameWithType: Users.FirstName
- uid: Iktan.Ecommerce.Domain.Entity.Users.FirstName*
  name: FirstName
  href: api/Iktan.Ecommerce.Domain.Entity.Users.html#Iktan_Ecommerce_Domain_Entity_Users_FirstName_
  commentId: Overload:Iktan.Ecommerce.Domain.Entity.Users.FirstName
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Entity.Users.FirstName
  nameWithType: Users.FirstName
- uid: Iktan.Ecommerce.Domain.Entity.Users.LastName
  name: LastName
  href: api/Iktan.Ecommerce.Domain.Entity.Users.html#Iktan_Ecommerce_Domain_Entity_Users_LastName
  commentId: P:Iktan.Ecommerce.Domain.Entity.Users.LastName
  fullName: Iktan.Ecommerce.Domain.Entity.Users.LastName
  nameWithType: Users.LastName
- uid: Iktan.Ecommerce.Domain.Entity.Users.LastName*
  name: LastName
  href: api/Iktan.Ecommerce.Domain.Entity.Users.html#Iktan_Ecommerce_Domain_Entity_Users_LastName_
  commentId: Overload:Iktan.Ecommerce.Domain.Entity.Users.LastName
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Entity.Users.LastName
  nameWithType: Users.LastName
- uid: Iktan.Ecommerce.Domain.Entity.Users.Password
  name: Password
  href: api/Iktan.Ecommerce.Domain.Entity.Users.html#Iktan_Ecommerce_Domain_Entity_Users_Password
  commentId: P:Iktan.Ecommerce.Domain.Entity.Users.Password
  fullName: Iktan.Ecommerce.Domain.Entity.Users.Password
  nameWithType: Users.Password
- uid: Iktan.Ecommerce.Domain.Entity.Users.Password*
  name: Password
  href: api/Iktan.Ecommerce.Domain.Entity.Users.html#Iktan_Ecommerce_Domain_Entity_Users_Password_
  commentId: Overload:Iktan.Ecommerce.Domain.Entity.Users.Password
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Entity.Users.Password
  nameWithType: Users.Password
- uid: Iktan.Ecommerce.Domain.Entity.Users.Token
  name: Token
  href: api/Iktan.Ecommerce.Domain.Entity.Users.html#Iktan_Ecommerce_Domain_Entity_Users_Token
  commentId: P:Iktan.Ecommerce.Domain.Entity.Users.Token
  fullName: Iktan.Ecommerce.Domain.Entity.Users.Token
  nameWithType: Users.Token
- uid: Iktan.Ecommerce.Domain.Entity.Users.Token*
  name: Token
  href: api/Iktan.Ecommerce.Domain.Entity.Users.html#Iktan_Ecommerce_Domain_Entity_Users_Token_
  commentId: Overload:Iktan.Ecommerce.Domain.Entity.Users.Token
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Entity.Users.Token
  nameWithType: Users.Token
- uid: Iktan.Ecommerce.Domain.Entity.Users.UserId
  name: UserId
  href: api/Iktan.Ecommerce.Domain.Entity.Users.html#Iktan_Ecommerce_Domain_Entity_Users_UserId
  commentId: P:Iktan.Ecommerce.Domain.Entity.Users.UserId
  fullName: Iktan.Ecommerce.Domain.Entity.Users.UserId
  nameWithType: Users.UserId
- uid: Iktan.Ecommerce.Domain.Entity.Users.UserId*
  name: UserId
  href: api/Iktan.Ecommerce.Domain.Entity.Users.html#Iktan_Ecommerce_Domain_Entity_Users_UserId_
  commentId: Overload:Iktan.Ecommerce.Domain.Entity.Users.UserId
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Entity.Users.UserId
  nameWithType: Users.UserId
- uid: Iktan.Ecommerce.Domain.Entity.Users.UserName
  name: UserName
  href: api/Iktan.Ecommerce.Domain.Entity.Users.html#Iktan_Ecommerce_Domain_Entity_Users_UserName
  commentId: P:Iktan.Ecommerce.Domain.Entity.Users.UserName
  fullName: Iktan.Ecommerce.Domain.Entity.Users.UserName
  nameWithType: Users.UserName
- uid: Iktan.Ecommerce.Domain.Entity.Users.UserName*
  name: UserName
  href: api/Iktan.Ecommerce.Domain.Entity.Users.html#Iktan_Ecommerce_Domain_Entity_Users_UserName_
  commentId: Overload:Iktan.Ecommerce.Domain.Entity.Users.UserName
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Entity.Users.UserName
  nameWithType: Users.UserName
- uid: Iktan.Ecommerce.Domain.Interface
  name: Iktan.Ecommerce.Domain.Interface
  href: api/Iktan.Ecommerce.Domain.Interface.html
  commentId: N:Iktan.Ecommerce.Domain.Interface
  fullName: Iktan.Ecommerce.Domain.Interface
  nameWithType: Iktan.Ecommerce.Domain.Interface
- uid: Iktan.Ecommerce.Domain.Interface.ICustomerDomain
  name: ICustomerDomain
  href: api/Iktan.Ecommerce.Domain.Interface.ICustomerDomain.html
  commentId: T:Iktan.Ecommerce.Domain.Interface.ICustomerDomain
  fullName: Iktan.Ecommerce.Domain.Interface.ICustomerDomain
  nameWithType: ICustomerDomain
- uid: Iktan.Ecommerce.Domain.Interface.ICustomerDomain.DeleteAsync(System.String)
  name: DeleteAsync(string)
  href: api/Iktan.Ecommerce.Domain.Interface.ICustomerDomain.html#Iktan_Ecommerce_Domain_Interface_ICustomerDomain_DeleteAsync_System_String_
  commentId: M:Iktan.Ecommerce.Domain.Interface.ICustomerDomain.DeleteAsync(System.String)
  name.vb: DeleteAsync(String)
  fullName: Iktan.Ecommerce.Domain.Interface.ICustomerDomain.DeleteAsync(string)
  fullName.vb: Iktan.Ecommerce.Domain.Interface.ICustomerDomain.DeleteAsync(String)
  nameWithType: ICustomerDomain.DeleteAsync(string)
  nameWithType.vb: ICustomerDomain.DeleteAsync(String)
- uid: Iktan.Ecommerce.Domain.Interface.ICustomerDomain.DeleteAsync*
  name: DeleteAsync
  href: api/Iktan.Ecommerce.Domain.Interface.ICustomerDomain.html#Iktan_Ecommerce_Domain_Interface_ICustomerDomain_DeleteAsync_
  commentId: Overload:Iktan.Ecommerce.Domain.Interface.ICustomerDomain.DeleteAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Interface.ICustomerDomain.DeleteAsync
  nameWithType: ICustomerDomain.DeleteAsync
- uid: Iktan.Ecommerce.Domain.Interface.ICustomerDomain.GetAllAsync
  name: GetAllAsync()
  href: api/Iktan.Ecommerce.Domain.Interface.ICustomerDomain.html#Iktan_Ecommerce_Domain_Interface_ICustomerDomain_GetAllAsync
  commentId: M:Iktan.Ecommerce.Domain.Interface.ICustomerDomain.GetAllAsync
  fullName: Iktan.Ecommerce.Domain.Interface.ICustomerDomain.GetAllAsync()
  nameWithType: ICustomerDomain.GetAllAsync()
- uid: Iktan.Ecommerce.Domain.Interface.ICustomerDomain.GetAllAsync*
  name: GetAllAsync
  href: api/Iktan.Ecommerce.Domain.Interface.ICustomerDomain.html#Iktan_Ecommerce_Domain_Interface_ICustomerDomain_GetAllAsync_
  commentId: Overload:Iktan.Ecommerce.Domain.Interface.ICustomerDomain.GetAllAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Interface.ICustomerDomain.GetAllAsync
  nameWithType: ICustomerDomain.GetAllAsync
- uid: Iktan.Ecommerce.Domain.Interface.ICustomerDomain.GetAsync(System.String)
  name: GetAsync(string)
  href: api/Iktan.Ecommerce.Domain.Interface.ICustomerDomain.html#Iktan_Ecommerce_Domain_Interface_ICustomerDomain_GetAsync_System_String_
  commentId: M:Iktan.Ecommerce.Domain.Interface.ICustomerDomain.GetAsync(System.String)
  name.vb: GetAsync(String)
  fullName: Iktan.Ecommerce.Domain.Interface.ICustomerDomain.GetAsync(string)
  fullName.vb: Iktan.Ecommerce.Domain.Interface.ICustomerDomain.GetAsync(String)
  nameWithType: ICustomerDomain.GetAsync(string)
  nameWithType.vb: ICustomerDomain.GetAsync(String)
- uid: Iktan.Ecommerce.Domain.Interface.ICustomerDomain.GetAsync*
  name: GetAsync
  href: api/Iktan.Ecommerce.Domain.Interface.ICustomerDomain.html#Iktan_Ecommerce_Domain_Interface_ICustomerDomain_GetAsync_
  commentId: Overload:Iktan.Ecommerce.Domain.Interface.ICustomerDomain.GetAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Interface.ICustomerDomain.GetAsync
  nameWithType: ICustomerDomain.GetAsync
- uid: Iktan.Ecommerce.Domain.Interface.ICustomerDomain.InsertAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  name: InsertAsync(Customers)
  href: api/Iktan.Ecommerce.Domain.Interface.ICustomerDomain.html#Iktan_Ecommerce_Domain_Interface_ICustomerDomain_InsertAsync_Iktan_Ecommerce_Domain_Entity_Customers_
  commentId: M:Iktan.Ecommerce.Domain.Interface.ICustomerDomain.InsertAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  fullName: Iktan.Ecommerce.Domain.Interface.ICustomerDomain.InsertAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  nameWithType: ICustomerDomain.InsertAsync(Customers)
- uid: Iktan.Ecommerce.Domain.Interface.ICustomerDomain.InsertAsync*
  name: InsertAsync
  href: api/Iktan.Ecommerce.Domain.Interface.ICustomerDomain.html#Iktan_Ecommerce_Domain_Interface_ICustomerDomain_InsertAsync_
  commentId: Overload:Iktan.Ecommerce.Domain.Interface.ICustomerDomain.InsertAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Interface.ICustomerDomain.InsertAsync
  nameWithType: ICustomerDomain.InsertAsync
- uid: Iktan.Ecommerce.Domain.Interface.ICustomerDomain.UpdateAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  name: UpdateAsync(Customers)
  href: api/Iktan.Ecommerce.Domain.Interface.ICustomerDomain.html#Iktan_Ecommerce_Domain_Interface_ICustomerDomain_UpdateAsync_Iktan_Ecommerce_Domain_Entity_Customers_
  commentId: M:Iktan.Ecommerce.Domain.Interface.ICustomerDomain.UpdateAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  fullName: Iktan.Ecommerce.Domain.Interface.ICustomerDomain.UpdateAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  nameWithType: ICustomerDomain.UpdateAsync(Customers)
- uid: Iktan.Ecommerce.Domain.Interface.ICustomerDomain.UpdateAsync*
  name: UpdateAsync
  href: api/Iktan.Ecommerce.Domain.Interface.ICustomerDomain.html#Iktan_Ecommerce_Domain_Interface_ICustomerDomain_UpdateAsync_
  commentId: Overload:Iktan.Ecommerce.Domain.Interface.ICustomerDomain.UpdateAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Interface.ICustomerDomain.UpdateAsync
  nameWithType: ICustomerDomain.UpdateAsync
- uid: Iktan.Ecommerce.Domain.Interface.IUserDomain
  name: IUserDomain
  href: api/Iktan.Ecommerce.Domain.Interface.IUserDomain.html
  commentId: T:Iktan.Ecommerce.Domain.Interface.IUserDomain
  fullName: Iktan.Ecommerce.Domain.Interface.IUserDomain
  nameWithType: IUserDomain
- uid: Iktan.Ecommerce.Domain.Interface.IUserDomain.Authenticate(System.String,System.String)
  name: Authenticate(string, string)
  href: api/Iktan.Ecommerce.Domain.Interface.IUserDomain.html#Iktan_Ecommerce_Domain_Interface_IUserDomain_Authenticate_System_String_System_String_
  commentId: M:Iktan.Ecommerce.Domain.Interface.IUserDomain.Authenticate(System.String,System.String)
  name.vb: Authenticate(String, String)
  fullName: Iktan.Ecommerce.Domain.Interface.IUserDomain.Authenticate(string, string)
  fullName.vb: Iktan.Ecommerce.Domain.Interface.IUserDomain.Authenticate(String, String)
  nameWithType: IUserDomain.Authenticate(string, string)
  nameWithType.vb: IUserDomain.Authenticate(String, String)
- uid: Iktan.Ecommerce.Domain.Interface.IUserDomain.Authenticate*
  name: Authenticate
  href: api/Iktan.Ecommerce.Domain.Interface.IUserDomain.html#Iktan_Ecommerce_Domain_Interface_IUserDomain_Authenticate_
  commentId: Overload:Iktan.Ecommerce.Domain.Interface.IUserDomain.Authenticate
  isSpec: "True"
  fullName: Iktan.Ecommerce.Domain.Interface.IUserDomain.Authenticate
  nameWithType: IUserDomain.Authenticate
- uid: Iktan.Ecommerce.Infraestructure.Data
  name: Iktan.Ecommerce.Infraestructure.Data
  href: api/Iktan.Ecommerce.Infraestructure.Data.html
  commentId: N:Iktan.Ecommerce.Infraestructure.Data
  fullName: Iktan.Ecommerce.Infraestructure.Data
  nameWithType: Iktan.Ecommerce.Infraestructure.Data
- uid: Iktan.Ecommerce.Infraestructure.Data.ConnectionFactory
  name: ConnectionFactory
  href: api/Iktan.Ecommerce.Infraestructure.Data.ConnectionFactory.html
  commentId: T:Iktan.Ecommerce.Infraestructure.Data.ConnectionFactory
  fullName: Iktan.Ecommerce.Infraestructure.Data.ConnectionFactory
  nameWithType: ConnectionFactory
- uid: Iktan.Ecommerce.Infraestructure.Data.ConnectionFactory.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  name: ConnectionFactory(IConfiguration)
  href: api/Iktan.Ecommerce.Infraestructure.Data.ConnectionFactory.html#Iktan_Ecommerce_Infraestructure_Data_ConnectionFactory__ctor_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:Iktan.Ecommerce.Infraestructure.Data.ConnectionFactory.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: New(IConfiguration)
  fullName: Iktan.Ecommerce.Infraestructure.Data.ConnectionFactory.ConnectionFactory(Microsoft.Extensions.Configuration.IConfiguration)
  fullName.vb: Iktan.Ecommerce.Infraestructure.Data.ConnectionFactory.New(Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: ConnectionFactory.ConnectionFactory(IConfiguration)
  nameWithType.vb: ConnectionFactory.New(IConfiguration)
- uid: Iktan.Ecommerce.Infraestructure.Data.ConnectionFactory.#ctor*
  name: ConnectionFactory
  href: api/Iktan.Ecommerce.Infraestructure.Data.ConnectionFactory.html#Iktan_Ecommerce_Infraestructure_Data_ConnectionFactory__ctor_
  commentId: Overload:Iktan.Ecommerce.Infraestructure.Data.ConnectionFactory.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Iktan.Ecommerce.Infraestructure.Data.ConnectionFactory.ConnectionFactory
  fullName.vb: Iktan.Ecommerce.Infraestructure.Data.ConnectionFactory.New
  nameWithType: ConnectionFactory.ConnectionFactory
  nameWithType.vb: ConnectionFactory.New
- uid: Iktan.Ecommerce.Infraestructure.Data.ConnectionFactory.GetDbConnection
  name: GetDbConnection
  href: api/Iktan.Ecommerce.Infraestructure.Data.ConnectionFactory.html#Iktan_Ecommerce_Infraestructure_Data_ConnectionFactory_GetDbConnection
  commentId: P:Iktan.Ecommerce.Infraestructure.Data.ConnectionFactory.GetDbConnection
  fullName: Iktan.Ecommerce.Infraestructure.Data.ConnectionFactory.GetDbConnection
  nameWithType: ConnectionFactory.GetDbConnection
- uid: Iktan.Ecommerce.Infraestructure.Data.ConnectionFactory.GetDbConnection*
  name: GetDbConnection
  href: api/Iktan.Ecommerce.Infraestructure.Data.ConnectionFactory.html#Iktan_Ecommerce_Infraestructure_Data_ConnectionFactory_GetDbConnection_
  commentId: Overload:Iktan.Ecommerce.Infraestructure.Data.ConnectionFactory.GetDbConnection
  isSpec: "True"
  fullName: Iktan.Ecommerce.Infraestructure.Data.ConnectionFactory.GetDbConnection
  nameWithType: ConnectionFactory.GetDbConnection
- uid: Iktan.Ecommerce.Infraestructure.Interface
  name: Iktan.Ecommerce.Infraestructure.Interface
  href: api/Iktan.Ecommerce.Infraestructure.Interface.html
  commentId: N:Iktan.Ecommerce.Infraestructure.Interface
  fullName: Iktan.Ecommerce.Infraestructure.Interface
  nameWithType: Iktan.Ecommerce.Infraestructure.Interface
- uid: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository
  name: ICustomerRepository
  href: api/Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.html
  commentId: T:Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository
  fullName: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository
  nameWithType: ICustomerRepository
- uid: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.DeleteAsync(System.String)
  name: DeleteAsync(string)
  href: api/Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.html#Iktan_Ecommerce_Infraestructure_Interface_ICustomerRepository_DeleteAsync_System_String_
  commentId: M:Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.DeleteAsync(System.String)
  name.vb: DeleteAsync(String)
  fullName: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.DeleteAsync(string)
  fullName.vb: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.DeleteAsync(String)
  nameWithType: ICustomerRepository.DeleteAsync(string)
  nameWithType.vb: ICustomerRepository.DeleteAsync(String)
- uid: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.DeleteAsync*
  name: DeleteAsync
  href: api/Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.html#Iktan_Ecommerce_Infraestructure_Interface_ICustomerRepository_DeleteAsync_
  commentId: Overload:Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.DeleteAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.DeleteAsync
  nameWithType: ICustomerRepository.DeleteAsync
- uid: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.GetAllAsync
  name: GetAllAsync()
  href: api/Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.html#Iktan_Ecommerce_Infraestructure_Interface_ICustomerRepository_GetAllAsync
  commentId: M:Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.GetAllAsync
  fullName: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.GetAllAsync()
  nameWithType: ICustomerRepository.GetAllAsync()
- uid: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.GetAllAsync*
  name: GetAllAsync
  href: api/Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.html#Iktan_Ecommerce_Infraestructure_Interface_ICustomerRepository_GetAllAsync_
  commentId: Overload:Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.GetAllAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.GetAllAsync
  nameWithType: ICustomerRepository.GetAllAsync
- uid: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.GetAsync(System.String)
  name: GetAsync(string)
  href: api/Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.html#Iktan_Ecommerce_Infraestructure_Interface_ICustomerRepository_GetAsync_System_String_
  commentId: M:Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.GetAsync(System.String)
  name.vb: GetAsync(String)
  fullName: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.GetAsync(string)
  fullName.vb: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.GetAsync(String)
  nameWithType: ICustomerRepository.GetAsync(string)
  nameWithType.vb: ICustomerRepository.GetAsync(String)
- uid: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.GetAsync*
  name: GetAsync
  href: api/Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.html#Iktan_Ecommerce_Infraestructure_Interface_ICustomerRepository_GetAsync_
  commentId: Overload:Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.GetAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.GetAsync
  nameWithType: ICustomerRepository.GetAsync
- uid: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.InsertAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  name: InsertAsync(Customers)
  href: api/Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.html#Iktan_Ecommerce_Infraestructure_Interface_ICustomerRepository_InsertAsync_Iktan_Ecommerce_Domain_Entity_Customers_
  commentId: M:Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.InsertAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  fullName: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.InsertAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  nameWithType: ICustomerRepository.InsertAsync(Customers)
- uid: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.InsertAsync*
  name: InsertAsync
  href: api/Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.html#Iktan_Ecommerce_Infraestructure_Interface_ICustomerRepository_InsertAsync_
  commentId: Overload:Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.InsertAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.InsertAsync
  nameWithType: ICustomerRepository.InsertAsync
- uid: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.UpdateAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  name: UpdateAsync(Customers)
  href: api/Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.html#Iktan_Ecommerce_Infraestructure_Interface_ICustomerRepository_UpdateAsync_Iktan_Ecommerce_Domain_Entity_Customers_
  commentId: M:Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.UpdateAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  fullName: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.UpdateAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  nameWithType: ICustomerRepository.UpdateAsync(Customers)
- uid: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.UpdateAsync*
  name: UpdateAsync
  href: api/Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.html#Iktan_Ecommerce_Infraestructure_Interface_ICustomerRepository_UpdateAsync_
  commentId: Overload:Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.UpdateAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Infraestructure.Interface.ICustomerRepository.UpdateAsync
  nameWithType: ICustomerRepository.UpdateAsync
- uid: Iktan.Ecommerce.Infraestructure.Interface.IUserRepository
  name: IUserRepository
  href: api/Iktan.Ecommerce.Infraestructure.Interface.IUserRepository.html
  commentId: T:Iktan.Ecommerce.Infraestructure.Interface.IUserRepository
  fullName: Iktan.Ecommerce.Infraestructure.Interface.IUserRepository
  nameWithType: IUserRepository
- uid: Iktan.Ecommerce.Infraestructure.Interface.IUserRepository.Authenticate(System.String,System.String)
  name: Authenticate(string, string)
  href: api/Iktan.Ecommerce.Infraestructure.Interface.IUserRepository.html#Iktan_Ecommerce_Infraestructure_Interface_IUserRepository_Authenticate_System_String_System_String_
  commentId: M:Iktan.Ecommerce.Infraestructure.Interface.IUserRepository.Authenticate(System.String,System.String)
  name.vb: Authenticate(String, String)
  fullName: Iktan.Ecommerce.Infraestructure.Interface.IUserRepository.Authenticate(string, string)
  fullName.vb: Iktan.Ecommerce.Infraestructure.Interface.IUserRepository.Authenticate(String, String)
  nameWithType: IUserRepository.Authenticate(string, string)
  nameWithType.vb: IUserRepository.Authenticate(String, String)
- uid: Iktan.Ecommerce.Infraestructure.Interface.IUserRepository.Authenticate*
  name: Authenticate
  href: api/Iktan.Ecommerce.Infraestructure.Interface.IUserRepository.html#Iktan_Ecommerce_Infraestructure_Interface_IUserRepository_Authenticate_
  commentId: Overload:Iktan.Ecommerce.Infraestructure.Interface.IUserRepository.Authenticate
  isSpec: "True"
  fullName: Iktan.Ecommerce.Infraestructure.Interface.IUserRepository.Authenticate
  nameWithType: IUserRepository.Authenticate
- uid: Iktan.Ecommerce.Infraestructure.Repository
  name: Iktan.Ecommerce.Infraestructure.Repository
  href: api/Iktan.Ecommerce.Infraestructure.Repository.html
  commentId: N:Iktan.Ecommerce.Infraestructure.Repository
  fullName: Iktan.Ecommerce.Infraestructure.Repository
  nameWithType: Iktan.Ecommerce.Infraestructure.Repository
- uid: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository
  name: CustomerRepository
  href: api/Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.html
  commentId: T:Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository
  fullName: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository
  nameWithType: CustomerRepository
- uid: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.#ctor(Iktan.Ecommerce.Transversal.Common.IConnectionFactory)
  name: CustomerRepository(IConnectionFactory)
  href: api/Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.html#Iktan_Ecommerce_Infraestructure_Repository_CustomerRepository__ctor_Iktan_Ecommerce_Transversal_Common_IConnectionFactory_
  commentId: M:Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.#ctor(Iktan.Ecommerce.Transversal.Common.IConnectionFactory)
  name.vb: New(IConnectionFactory)
  fullName: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.CustomerRepository(Iktan.Ecommerce.Transversal.Common.IConnectionFactory)
  fullName.vb: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.New(Iktan.Ecommerce.Transversal.Common.IConnectionFactory)
  nameWithType: CustomerRepository.CustomerRepository(IConnectionFactory)
  nameWithType.vb: CustomerRepository.New(IConnectionFactory)
- uid: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.#ctor*
  name: CustomerRepository
  href: api/Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.html#Iktan_Ecommerce_Infraestructure_Repository_CustomerRepository__ctor_
  commentId: Overload:Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.CustomerRepository
  fullName.vb: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.New
  nameWithType: CustomerRepository.CustomerRepository
  nameWithType.vb: CustomerRepository.New
- uid: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.DeleteAsync(System.String)
  name: DeleteAsync(string)
  href: api/Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.html#Iktan_Ecommerce_Infraestructure_Repository_CustomerRepository_DeleteAsync_System_String_
  commentId: M:Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.DeleteAsync(System.String)
  name.vb: DeleteAsync(String)
  fullName: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.DeleteAsync(string)
  fullName.vb: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.DeleteAsync(String)
  nameWithType: CustomerRepository.DeleteAsync(string)
  nameWithType.vb: CustomerRepository.DeleteAsync(String)
- uid: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.DeleteAsync*
  name: DeleteAsync
  href: api/Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.html#Iktan_Ecommerce_Infraestructure_Repository_CustomerRepository_DeleteAsync_
  commentId: Overload:Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.DeleteAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.DeleteAsync
  nameWithType: CustomerRepository.DeleteAsync
- uid: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.GetAllAsync
  name: GetAllAsync()
  href: api/Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.html#Iktan_Ecommerce_Infraestructure_Repository_CustomerRepository_GetAllAsync
  commentId: M:Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.GetAllAsync
  fullName: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.GetAllAsync()
  nameWithType: CustomerRepository.GetAllAsync()
- uid: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.GetAllAsync*
  name: GetAllAsync
  href: api/Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.html#Iktan_Ecommerce_Infraestructure_Repository_CustomerRepository_GetAllAsync_
  commentId: Overload:Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.GetAllAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.GetAllAsync
  nameWithType: CustomerRepository.GetAllAsync
- uid: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.GetAsync(System.String)
  name: GetAsync(string)
  href: api/Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.html#Iktan_Ecommerce_Infraestructure_Repository_CustomerRepository_GetAsync_System_String_
  commentId: M:Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.GetAsync(System.String)
  name.vb: GetAsync(String)
  fullName: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.GetAsync(string)
  fullName.vb: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.GetAsync(String)
  nameWithType: CustomerRepository.GetAsync(string)
  nameWithType.vb: CustomerRepository.GetAsync(String)
- uid: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.GetAsync*
  name: GetAsync
  href: api/Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.html#Iktan_Ecommerce_Infraestructure_Repository_CustomerRepository_GetAsync_
  commentId: Overload:Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.GetAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.GetAsync
  nameWithType: CustomerRepository.GetAsync
- uid: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.InsertAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  name: InsertAsync(Customers)
  href: api/Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.html#Iktan_Ecommerce_Infraestructure_Repository_CustomerRepository_InsertAsync_Iktan_Ecommerce_Domain_Entity_Customers_
  commentId: M:Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.InsertAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  fullName: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.InsertAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  nameWithType: CustomerRepository.InsertAsync(Customers)
- uid: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.InsertAsync*
  name: InsertAsync
  href: api/Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.html#Iktan_Ecommerce_Infraestructure_Repository_CustomerRepository_InsertAsync_
  commentId: Overload:Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.InsertAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.InsertAsync
  nameWithType: CustomerRepository.InsertAsync
- uid: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.UpdateAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  name: UpdateAsync(Customers)
  href: api/Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.html#Iktan_Ecommerce_Infraestructure_Repository_CustomerRepository_UpdateAsync_Iktan_Ecommerce_Domain_Entity_Customers_
  commentId: M:Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.UpdateAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  fullName: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.UpdateAsync(Iktan.Ecommerce.Domain.Entity.Customers)
  nameWithType: CustomerRepository.UpdateAsync(Customers)
- uid: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.UpdateAsync*
  name: UpdateAsync
  href: api/Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.html#Iktan_Ecommerce_Infraestructure_Repository_CustomerRepository_UpdateAsync_
  commentId: Overload:Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.UpdateAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Infraestructure.Repository.CustomerRepository.UpdateAsync
  nameWithType: CustomerRepository.UpdateAsync
- uid: Iktan.Ecommerce.Infraestructure.Repository.UserRepository
  name: UserRepository
  href: api/Iktan.Ecommerce.Infraestructure.Repository.UserRepository.html
  commentId: T:Iktan.Ecommerce.Infraestructure.Repository.UserRepository
  fullName: Iktan.Ecommerce.Infraestructure.Repository.UserRepository
  nameWithType: UserRepository
- uid: Iktan.Ecommerce.Infraestructure.Repository.UserRepository.#ctor(Iktan.Ecommerce.Transversal.Common.IConnectionFactory)
  name: UserRepository(IConnectionFactory)
  href: api/Iktan.Ecommerce.Infraestructure.Repository.UserRepository.html#Iktan_Ecommerce_Infraestructure_Repository_UserRepository__ctor_Iktan_Ecommerce_Transversal_Common_IConnectionFactory_
  commentId: M:Iktan.Ecommerce.Infraestructure.Repository.UserRepository.#ctor(Iktan.Ecommerce.Transversal.Common.IConnectionFactory)
  name.vb: New(IConnectionFactory)
  fullName: Iktan.Ecommerce.Infraestructure.Repository.UserRepository.UserRepository(Iktan.Ecommerce.Transversal.Common.IConnectionFactory)
  fullName.vb: Iktan.Ecommerce.Infraestructure.Repository.UserRepository.New(Iktan.Ecommerce.Transversal.Common.IConnectionFactory)
  nameWithType: UserRepository.UserRepository(IConnectionFactory)
  nameWithType.vb: UserRepository.New(IConnectionFactory)
- uid: Iktan.Ecommerce.Infraestructure.Repository.UserRepository.#ctor*
  name: UserRepository
  href: api/Iktan.Ecommerce.Infraestructure.Repository.UserRepository.html#Iktan_Ecommerce_Infraestructure_Repository_UserRepository__ctor_
  commentId: Overload:Iktan.Ecommerce.Infraestructure.Repository.UserRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Iktan.Ecommerce.Infraestructure.Repository.UserRepository.UserRepository
  fullName.vb: Iktan.Ecommerce.Infraestructure.Repository.UserRepository.New
  nameWithType: UserRepository.UserRepository
  nameWithType.vb: UserRepository.New
- uid: Iktan.Ecommerce.Infraestructure.Repository.UserRepository.Authenticate(System.String,System.String)
  name: Authenticate(string, string)
  href: api/Iktan.Ecommerce.Infraestructure.Repository.UserRepository.html#Iktan_Ecommerce_Infraestructure_Repository_UserRepository_Authenticate_System_String_System_String_
  commentId: M:Iktan.Ecommerce.Infraestructure.Repository.UserRepository.Authenticate(System.String,System.String)
  name.vb: Authenticate(String, String)
  fullName: Iktan.Ecommerce.Infraestructure.Repository.UserRepository.Authenticate(string, string)
  fullName.vb: Iktan.Ecommerce.Infraestructure.Repository.UserRepository.Authenticate(String, String)
  nameWithType: UserRepository.Authenticate(string, string)
  nameWithType.vb: UserRepository.Authenticate(String, String)
- uid: Iktan.Ecommerce.Infraestructure.Repository.UserRepository.Authenticate*
  name: Authenticate
  href: api/Iktan.Ecommerce.Infraestructure.Repository.UserRepository.html#Iktan_Ecommerce_Infraestructure_Repository_UserRepository_Authenticate_
  commentId: Overload:Iktan.Ecommerce.Infraestructure.Repository.UserRepository.Authenticate
  isSpec: "True"
  fullName: Iktan.Ecommerce.Infraestructure.Repository.UserRepository.Authenticate
  nameWithType: UserRepository.Authenticate
- uid: Iktan.Ecommerce.Service.WebAPI.Controllers
  name: Iktan.Ecommerce.Service.WebAPI.Controllers
  href: api/Iktan.Ecommerce.Service.WebAPI.Controllers.html
  commentId: N:Iktan.Ecommerce.Service.WebAPI.Controllers
  fullName: Iktan.Ecommerce.Service.WebAPI.Controllers
  nameWithType: Iktan.Ecommerce.Service.WebAPI.Controllers
- uid: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController
  name: CustomerController
  href: api/Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.html
  commentId: T:Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController
  fullName: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController
  nameWithType: CustomerController
- uid: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.#ctor(Iktan.Ecommerce.App.Interface.ICustomerApplication)
  name: CustomerController(ICustomerApplication)
  href: api/Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.html#Iktan_Ecommerce_Service_WebAPI_Controllers_CustomerController__ctor_Iktan_Ecommerce_App_Interface_ICustomerApplication_
  commentId: M:Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.#ctor(Iktan.Ecommerce.App.Interface.ICustomerApplication)
  name.vb: New(ICustomerApplication)
  fullName: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.CustomerController(Iktan.Ecommerce.App.Interface.ICustomerApplication)
  fullName.vb: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.New(Iktan.Ecommerce.App.Interface.ICustomerApplication)
  nameWithType: CustomerController.CustomerController(ICustomerApplication)
  nameWithType.vb: CustomerController.New(ICustomerApplication)
- uid: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.#ctor*
  name: CustomerController
  href: api/Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.html#Iktan_Ecommerce_Service_WebAPI_Controllers_CustomerController__ctor_
  commentId: Overload:Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.CustomerController
  fullName.vb: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.New
  nameWithType: CustomerController.CustomerController
  nameWithType.vb: CustomerController.New
- uid: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.CustomerReportAsync
  name: CustomerReportAsync()
  href: api/Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.html#Iktan_Ecommerce_Service_WebAPI_Controllers_CustomerController_CustomerReportAsync
  commentId: M:Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.CustomerReportAsync
  fullName: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.CustomerReportAsync()
  nameWithType: CustomerController.CustomerReportAsync()
- uid: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.CustomerReportAsync*
  name: CustomerReportAsync
  href: api/Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.html#Iktan_Ecommerce_Service_WebAPI_Controllers_CustomerController_CustomerReportAsync_
  commentId: Overload:Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.CustomerReportAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.CustomerReportAsync
  nameWithType: CustomerController.CustomerReportAsync
- uid: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.CustomerSearchAsync(System.String)
  name: CustomerSearchAsync(string)
  href: api/Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.html#Iktan_Ecommerce_Service_WebAPI_Controllers_CustomerController_CustomerSearchAsync_System_String_
  commentId: M:Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.CustomerSearchAsync(System.String)
  name.vb: CustomerSearchAsync(String)
  fullName: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.CustomerSearchAsync(string)
  fullName.vb: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.CustomerSearchAsync(String)
  nameWithType: CustomerController.CustomerSearchAsync(string)
  nameWithType.vb: CustomerController.CustomerSearchAsync(String)
- uid: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.CustomerSearchAsync*
  name: CustomerSearchAsync
  href: api/Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.html#Iktan_Ecommerce_Service_WebAPI_Controllers_CustomerController_CustomerSearchAsync_
  commentId: Overload:Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.CustomerSearchAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.CustomerSearchAsync
  nameWithType: CustomerController.CustomerSearchAsync
- uid: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.DiseableCustomerAsync(System.String)
  name: DiseableCustomerAsync(string)
  href: api/Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.html#Iktan_Ecommerce_Service_WebAPI_Controllers_CustomerController_DiseableCustomerAsync_System_String_
  commentId: M:Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.DiseableCustomerAsync(System.String)
  name.vb: DiseableCustomerAsync(String)
  fullName: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.DiseableCustomerAsync(string)
  fullName.vb: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.DiseableCustomerAsync(String)
  nameWithType: CustomerController.DiseableCustomerAsync(string)
  nameWithType.vb: CustomerController.DiseableCustomerAsync(String)
- uid: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.DiseableCustomerAsync*
  name: DiseableCustomerAsync
  href: api/Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.html#Iktan_Ecommerce_Service_WebAPI_Controllers_CustomerController_DiseableCustomerAsync_
  commentId: Overload:Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.DiseableCustomerAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.DiseableCustomerAsync
  nameWithType: CustomerController.DiseableCustomerAsync
- uid: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.RefreshCustomerAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  name: RefreshCustomerAsync(CustomerDTO)
  href: api/Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.html#Iktan_Ecommerce_Service_WebAPI_Controllers_CustomerController_RefreshCustomerAsync_Iktan_Ecommerce_App_DTO_CustomerDTO_
  commentId: M:Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.RefreshCustomerAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  fullName: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.RefreshCustomerAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  nameWithType: CustomerController.RefreshCustomerAsync(CustomerDTO)
- uid: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.RefreshCustomerAsync*
  name: RefreshCustomerAsync
  href: api/Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.html#Iktan_Ecommerce_Service_WebAPI_Controllers_CustomerController_RefreshCustomerAsync_
  commentId: Overload:Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.RefreshCustomerAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.RefreshCustomerAsync
  nameWithType: CustomerController.RefreshCustomerAsync
- uid: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.RegistryCustomerAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  name: RegistryCustomerAsync(CustomerDTO)
  href: api/Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.html#Iktan_Ecommerce_Service_WebAPI_Controllers_CustomerController_RegistryCustomerAsync_Iktan_Ecommerce_App_DTO_CustomerDTO_
  commentId: M:Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.RegistryCustomerAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  fullName: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.RegistryCustomerAsync(Iktan.Ecommerce.App.DTO.CustomerDTO)
  nameWithType: CustomerController.RegistryCustomerAsync(CustomerDTO)
- uid: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.RegistryCustomerAsync*
  name: RegistryCustomerAsync
  href: api/Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.html#Iktan_Ecommerce_Service_WebAPI_Controllers_CustomerController_RegistryCustomerAsync_
  commentId: Overload:Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.RegistryCustomerAsync
  isSpec: "True"
  fullName: Iktan.Ecommerce.Service.WebAPI.Controllers.CustomerController.RegistryCustomerAsync
  nameWithType: CustomerController.RegistryCustomerAsync
- uid: Iktan.Ecommerce.Service.WebAPI.Controllers.UserController
  name: UserController
  href: api/Iktan.Ecommerce.Service.WebAPI.Controllers.UserController.html
  commentId: T:Iktan.Ecommerce.Service.WebAPI.Controllers.UserController
  fullName: Iktan.Ecommerce.Service.WebAPI.Controllers.UserController
  nameWithType: UserController
- uid: Iktan.Ecommerce.Service.WebAPI.Controllers.UserController.#ctor(Iktan.Ecommerce.App.Interface.IUserApplication,Microsoft.Extensions.Options.IOptions{Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings})
  name: UserController(IUserApplication, IOptions<AppSettings>)
  href: api/Iktan.Ecommerce.Service.WebAPI.Controllers.UserController.html#Iktan_Ecommerce_Service_WebAPI_Controllers_UserController__ctor_Iktan_Ecommerce_App_Interface_IUserApplication_Microsoft_Extensions_Options_IOptions_Iktan_Ecommerce_Service_WebAPI_Helpers_AppSettings__
  commentId: M:Iktan.Ecommerce.Service.WebAPI.Controllers.UserController.#ctor(Iktan.Ecommerce.App.Interface.IUserApplication,Microsoft.Extensions.Options.IOptions{Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings})
  name.vb: New(IUserApplication, IOptions(Of AppSettings))
  fullName: Iktan.Ecommerce.Service.WebAPI.Controllers.UserController.UserController(Iktan.Ecommerce.App.Interface.IUserApplication, Microsoft.Extensions.Options.IOptions<Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings>)
  fullName.vb: Iktan.Ecommerce.Service.WebAPI.Controllers.UserController.New(Iktan.Ecommerce.App.Interface.IUserApplication, Microsoft.Extensions.Options.IOptions(Of Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings))
  nameWithType: UserController.UserController(IUserApplication, IOptions<AppSettings>)
  nameWithType.vb: UserController.New(IUserApplication, IOptions(Of AppSettings))
- uid: Iktan.Ecommerce.Service.WebAPI.Controllers.UserController.#ctor*
  name: UserController
  href: api/Iktan.Ecommerce.Service.WebAPI.Controllers.UserController.html#Iktan_Ecommerce_Service_WebAPI_Controllers_UserController__ctor_
  commentId: Overload:Iktan.Ecommerce.Service.WebAPI.Controllers.UserController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Iktan.Ecommerce.Service.WebAPI.Controllers.UserController.UserController
  fullName.vb: Iktan.Ecommerce.Service.WebAPI.Controllers.UserController.New
  nameWithType: UserController.UserController
  nameWithType.vb: UserController.New
- uid: Iktan.Ecommerce.Service.WebAPI.Controllers.UserController.UserAccess(Iktan.Ecommerce.App.DTO.UserDTO)
  name: UserAccess(UserDTO)
  href: api/Iktan.Ecommerce.Service.WebAPI.Controllers.UserController.html#Iktan_Ecommerce_Service_WebAPI_Controllers_UserController_UserAccess_Iktan_Ecommerce_App_DTO_UserDTO_
  commentId: M:Iktan.Ecommerce.Service.WebAPI.Controllers.UserController.UserAccess(Iktan.Ecommerce.App.DTO.UserDTO)
  fullName: Iktan.Ecommerce.Service.WebAPI.Controllers.UserController.UserAccess(Iktan.Ecommerce.App.DTO.UserDTO)
  nameWithType: UserController.UserAccess(UserDTO)
- uid: Iktan.Ecommerce.Service.WebAPI.Controllers.UserController.UserAccess*
  name: UserAccess
  href: api/Iktan.Ecommerce.Service.WebAPI.Controllers.UserController.html#Iktan_Ecommerce_Service_WebAPI_Controllers_UserController_UserAccess_
  commentId: Overload:Iktan.Ecommerce.Service.WebAPI.Controllers.UserController.UserAccess
  isSpec: "True"
  fullName: Iktan.Ecommerce.Service.WebAPI.Controllers.UserController.UserAccess
  nameWithType: UserController.UserAccess
- uid: Iktan.Ecommerce.Service.WebAPI.Helpers
  name: Iktan.Ecommerce.Service.WebAPI.Helpers
  href: api/Iktan.Ecommerce.Service.WebAPI.Helpers.html
  commentId: N:Iktan.Ecommerce.Service.WebAPI.Helpers
  fullName: Iktan.Ecommerce.Service.WebAPI.Helpers
  nameWithType: Iktan.Ecommerce.Service.WebAPI.Helpers
- uid: Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings
  name: AppSettings
  href: api/Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.html
  commentId: T:Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings
  fullName: Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings
  nameWithType: AppSettings
- uid: Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.Audience
  name: Audience
  href: api/Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.html#Iktan_Ecommerce_Service_WebAPI_Helpers_AppSettings_Audience
  commentId: P:Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.Audience
  fullName: Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.Audience
  nameWithType: AppSettings.Audience
- uid: Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.Audience*
  name: Audience
  href: api/Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.html#Iktan_Ecommerce_Service_WebAPI_Helpers_AppSettings_Audience_
  commentId: Overload:Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.Audience
  isSpec: "True"
  fullName: Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.Audience
  nameWithType: AppSettings.Audience
- uid: Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.Issuer
  name: Issuer
  href: api/Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.html#Iktan_Ecommerce_Service_WebAPI_Helpers_AppSettings_Issuer
  commentId: P:Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.Issuer
  fullName: Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.Issuer
  nameWithType: AppSettings.Issuer
- uid: Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.Issuer*
  name: Issuer
  href: api/Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.html#Iktan_Ecommerce_Service_WebAPI_Helpers_AppSettings_Issuer_
  commentId: Overload:Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.Issuer
  isSpec: "True"
  fullName: Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.Issuer
  nameWithType: AppSettings.Issuer
- uid: Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.OriginCors
  name: OriginCors
  href: api/Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.html#Iktan_Ecommerce_Service_WebAPI_Helpers_AppSettings_OriginCors
  commentId: P:Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.OriginCors
  fullName: Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.OriginCors
  nameWithType: AppSettings.OriginCors
- uid: Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.OriginCors*
  name: OriginCors
  href: api/Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.html#Iktan_Ecommerce_Service_WebAPI_Helpers_AppSettings_OriginCors_
  commentId: Overload:Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.OriginCors
  isSpec: "True"
  fullName: Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.OriginCors
  nameWithType: AppSettings.OriginCors
- uid: Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.Secret
  name: Secret
  href: api/Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.html#Iktan_Ecommerce_Service_WebAPI_Helpers_AppSettings_Secret
  commentId: P:Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.Secret
  fullName: Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.Secret
  nameWithType: AppSettings.Secret
- uid: Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.Secret*
  name: Secret
  href: api/Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.html#Iktan_Ecommerce_Service_WebAPI_Helpers_AppSettings_Secret_
  commentId: Overload:Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.Secret
  isSpec: "True"
  fullName: Iktan.Ecommerce.Service.WebAPI.Helpers.AppSettings.Secret
  nameWithType: AppSettings.Secret
- uid: Iktan.Ecommerce.Service.WebAPI.Modules.Authentication
  name: Iktan.Ecommerce.Service.WebAPI.Modules.Authentication
  href: api/Iktan.Ecommerce.Service.WebAPI.Modules.Authentication.html
  commentId: N:Iktan.Ecommerce.Service.WebAPI.Modules.Authentication
  fullName: Iktan.Ecommerce.Service.WebAPI.Modules.Authentication
  nameWithType: Iktan.Ecommerce.Service.WebAPI.Modules.Authentication
- uid: Iktan.Ecommerce.Service.WebAPI.Modules.Authentication.AuthenticationExtensions
  name: AuthenticationExtensions
  href: api/Iktan.Ecommerce.Service.WebAPI.Modules.Authentication.AuthenticationExtensions.html
  commentId: T:Iktan.Ecommerce.Service.WebAPI.Modules.Authentication.AuthenticationExtensions
  fullName: Iktan.Ecommerce.Service.WebAPI.Modules.Authentication.AuthenticationExtensions
  nameWithType: AuthenticationExtensions
- uid: Iktan.Ecommerce.Service.WebAPI.Modules.Authentication.AuthenticationExtensions.AddAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  name: AddAuthentication(IServiceCollection, IConfiguration)
  href: api/Iktan.Ecommerce.Service.WebAPI.Modules.Authentication.AuthenticationExtensions.html#Iktan_Ecommerce_Service_WebAPI_Modules_Authentication_AuthenticationExtensions_AddAuthentication_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:Iktan.Ecommerce.Service.WebAPI.Modules.Authentication.AuthenticationExtensions.AddAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  fullName: Iktan.Ecommerce.Service.WebAPI.Modules.Authentication.AuthenticationExtensions.AddAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: AuthenticationExtensions.AddAuthentication(IServiceCollection, IConfiguration)
- uid: Iktan.Ecommerce.Service.WebAPI.Modules.Authentication.AuthenticationExtensions.AddAuthentication*
  name: AddAuthentication
  href: api/Iktan.Ecommerce.Service.WebAPI.Modules.Authentication.AuthenticationExtensions.html#Iktan_Ecommerce_Service_WebAPI_Modules_Authentication_AuthenticationExtensions_AddAuthentication_
  commentId: Overload:Iktan.Ecommerce.Service.WebAPI.Modules.Authentication.AuthenticationExtensions.AddAuthentication
  isSpec: "True"
  fullName: Iktan.Ecommerce.Service.WebAPI.Modules.Authentication.AuthenticationExtensions.AddAuthentication
  nameWithType: AuthenticationExtensions.AddAuthentication
- uid: Iktan.Ecommerce.Service.WebAPI.Modules.Feature
  name: Iktan.Ecommerce.Service.WebAPI.Modules.Feature
  href: api/Iktan.Ecommerce.Service.WebAPI.Modules.Feature.html
  commentId: N:Iktan.Ecommerce.Service.WebAPI.Modules.Feature
  fullName: Iktan.Ecommerce.Service.WebAPI.Modules.Feature
  nameWithType: Iktan.Ecommerce.Service.WebAPI.Modules.Feature
- uid: Iktan.Ecommerce.Service.WebAPI.Modules.Feature.FeatureExtensions
  name: FeatureExtensions
  href: api/Iktan.Ecommerce.Service.WebAPI.Modules.Feature.FeatureExtensions.html
  commentId: T:Iktan.Ecommerce.Service.WebAPI.Modules.Feature.FeatureExtensions
  fullName: Iktan.Ecommerce.Service.WebAPI.Modules.Feature.FeatureExtensions
  nameWithType: FeatureExtensions
- uid: Iktan.Ecommerce.Service.WebAPI.Modules.Feature.FeatureExtensions.AddFeature(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.String)
  name: AddFeature(IServiceCollection, IConfiguration, string)
  href: api/Iktan.Ecommerce.Service.WebAPI.Modules.Feature.FeatureExtensions.html#Iktan_Ecommerce_Service_WebAPI_Modules_Feature_FeatureExtensions_AddFeature_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_System_String_
  commentId: M:Iktan.Ecommerce.Service.WebAPI.Modules.Feature.FeatureExtensions.AddFeature(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.String)
  name.vb: AddFeature(IServiceCollection, IConfiguration, String)
  fullName: Iktan.Ecommerce.Service.WebAPI.Modules.Feature.FeatureExtensions.AddFeature(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration, string)
  fullName.vb: Iktan.Ecommerce.Service.WebAPI.Modules.Feature.FeatureExtensions.AddFeature(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration, String)
  nameWithType: FeatureExtensions.AddFeature(IServiceCollection, IConfiguration, string)
  nameWithType.vb: FeatureExtensions.AddFeature(IServiceCollection, IConfiguration, String)
- uid: Iktan.Ecommerce.Service.WebAPI.Modules.Feature.FeatureExtensions.AddFeature*
  name: AddFeature
  href: api/Iktan.Ecommerce.Service.WebAPI.Modules.Feature.FeatureExtensions.html#Iktan_Ecommerce_Service_WebAPI_Modules_Feature_FeatureExtensions_AddFeature_
  commentId: Overload:Iktan.Ecommerce.Service.WebAPI.Modules.Feature.FeatureExtensions.AddFeature
  isSpec: "True"
  fullName: Iktan.Ecommerce.Service.WebAPI.Modules.Feature.FeatureExtensions.AddFeature
  nameWithType: FeatureExtensions.AddFeature
- uid: Iktan.Ecommerce.Service.WebAPI.Modules.Injection
  name: Iktan.Ecommerce.Service.WebAPI.Modules.Injection
  href: api/Iktan.Ecommerce.Service.WebAPI.Modules.Injection.html
  commentId: N:Iktan.Ecommerce.Service.WebAPI.Modules.Injection
  fullName: Iktan.Ecommerce.Service.WebAPI.Modules.Injection
  nameWithType: Iktan.Ecommerce.Service.WebAPI.Modules.Injection
- uid: Iktan.Ecommerce.Service.WebAPI.Modules.Injection.InjectionExtensions
  name: InjectionExtensions
  href: api/Iktan.Ecommerce.Service.WebAPI.Modules.Injection.InjectionExtensions.html
  commentId: T:Iktan.Ecommerce.Service.WebAPI.Modules.Injection.InjectionExtensions
  fullName: Iktan.Ecommerce.Service.WebAPI.Modules.Injection.InjectionExtensions
  nameWithType: InjectionExtensions
- uid: Iktan.Ecommerce.Service.WebAPI.Modules.Injection.InjectionExtensions.AddInjection(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  name: AddInjection(IServiceCollection, IConfiguration)
  href: api/Iktan.Ecommerce.Service.WebAPI.Modules.Injection.InjectionExtensions.html#Iktan_Ecommerce_Service_WebAPI_Modules_Injection_InjectionExtensions_AddInjection_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:Iktan.Ecommerce.Service.WebAPI.Modules.Injection.InjectionExtensions.AddInjection(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  fullName: Iktan.Ecommerce.Service.WebAPI.Modules.Injection.InjectionExtensions.AddInjection(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: InjectionExtensions.AddInjection(IServiceCollection, IConfiguration)
- uid: Iktan.Ecommerce.Service.WebAPI.Modules.Injection.InjectionExtensions.AddInjection*
  name: AddInjection
  href: api/Iktan.Ecommerce.Service.WebAPI.Modules.Injection.InjectionExtensions.html#Iktan_Ecommerce_Service_WebAPI_Modules_Injection_InjectionExtensions_AddInjection_
  commentId: Overload:Iktan.Ecommerce.Service.WebAPI.Modules.Injection.InjectionExtensions.AddInjection
  isSpec: "True"
  fullName: Iktan.Ecommerce.Service.WebAPI.Modules.Injection.InjectionExtensions.AddInjection
  nameWithType: InjectionExtensions.AddInjection
- uid: Iktan.Ecommerce.Service.WebAPI.Modules.Swagger
  name: Iktan.Ecommerce.Service.WebAPI.Modules.Swagger
  href: api/Iktan.Ecommerce.Service.WebAPI.Modules.Swagger.html
  commentId: N:Iktan.Ecommerce.Service.WebAPI.Modules.Swagger
  fullName: Iktan.Ecommerce.Service.WebAPI.Modules.Swagger
  nameWithType: Iktan.Ecommerce.Service.WebAPI.Modules.Swagger
- uid: Iktan.Ecommerce.Service.WebAPI.Modules.Swagger.SwaggerExtensions
  name: SwaggerExtensions
  href: api/Iktan.Ecommerce.Service.WebAPI.Modules.Swagger.SwaggerExtensions.html
  commentId: T:Iktan.Ecommerce.Service.WebAPI.Modules.Swagger.SwaggerExtensions
  fullName: Iktan.Ecommerce.Service.WebAPI.Modules.Swagger.SwaggerExtensions
  nameWithType: SwaggerExtensions
- uid: Iktan.Ecommerce.Service.WebAPI.Modules.Swagger.SwaggerExtensions.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddSwagger(IServiceCollection)
  href: api/Iktan.Ecommerce.Service.WebAPI.Modules.Swagger.SwaggerExtensions.html#Iktan_Ecommerce_Service_WebAPI_Modules_Swagger_SwaggerExtensions_AddSwagger_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:Iktan.Ecommerce.Service.WebAPI.Modules.Swagger.SwaggerExtensions.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: Iktan.Ecommerce.Service.WebAPI.Modules.Swagger.SwaggerExtensions.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: SwaggerExtensions.AddSwagger(IServiceCollection)
- uid: Iktan.Ecommerce.Service.WebAPI.Modules.Swagger.SwaggerExtensions.AddSwagger*
  name: AddSwagger
  href: api/Iktan.Ecommerce.Service.WebAPI.Modules.Swagger.SwaggerExtensions.html#Iktan_Ecommerce_Service_WebAPI_Modules_Swagger_SwaggerExtensions_AddSwagger_
  commentId: Overload:Iktan.Ecommerce.Service.WebAPI.Modules.Swagger.SwaggerExtensions.AddSwagger
  isSpec: "True"
  fullName: Iktan.Ecommerce.Service.WebAPI.Modules.Swagger.SwaggerExtensions.AddSwagger
  nameWithType: SwaggerExtensions.AddSwagger
- uid: Iktan.Ecommerce.Service.WebAPI.Modules.Validator
  name: Iktan.Ecommerce.Service.WebAPI.Modules.Validator
  href: api/Iktan.Ecommerce.Service.WebAPI.Modules.Validator.html
  commentId: N:Iktan.Ecommerce.Service.WebAPI.Modules.Validator
  fullName: Iktan.Ecommerce.Service.WebAPI.Modules.Validator
  nameWithType: Iktan.Ecommerce.Service.WebAPI.Modules.Validator
- uid: Iktan.Ecommerce.Service.WebAPI.Modules.Validator.ValidatorExtensions
  name: ValidatorExtensions
  href: api/Iktan.Ecommerce.Service.WebAPI.Modules.Validator.ValidatorExtensions.html
  commentId: T:Iktan.Ecommerce.Service.WebAPI.Modules.Validator.ValidatorExtensions
  fullName: Iktan.Ecommerce.Service.WebAPI.Modules.Validator.ValidatorExtensions
  nameWithType: ValidatorExtensions
- uid: Iktan.Ecommerce.Service.WebAPI.Modules.Validator.ValidatorExtensions.AddValidator(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddValidator(IServiceCollection)
  href: api/Iktan.Ecommerce.Service.WebAPI.Modules.Validator.ValidatorExtensions.html#Iktan_Ecommerce_Service_WebAPI_Modules_Validator_ValidatorExtensions_AddValidator_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:Iktan.Ecommerce.Service.WebAPI.Modules.Validator.ValidatorExtensions.AddValidator(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: Iktan.Ecommerce.Service.WebAPI.Modules.Validator.ValidatorExtensions.AddValidator(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ValidatorExtensions.AddValidator(IServiceCollection)
- uid: Iktan.Ecommerce.Service.WebAPI.Modules.Validator.ValidatorExtensions.AddValidator*
  name: AddValidator
  href: api/Iktan.Ecommerce.Service.WebAPI.Modules.Validator.ValidatorExtensions.html#Iktan_Ecommerce_Service_WebAPI_Modules_Validator_ValidatorExtensions_AddValidator_
  commentId: Overload:Iktan.Ecommerce.Service.WebAPI.Modules.Validator.ValidatorExtensions.AddValidator
  isSpec: "True"
  fullName: Iktan.Ecommerce.Service.WebAPI.Modules.Validator.ValidatorExtensions.AddValidator
  nameWithType: ValidatorExtensions.AddValidator
- uid: Iktan.Ecommerce.Transversal.Common
  name: Iktan.Ecommerce.Transversal.Common
  href: api/Iktan.Ecommerce.Transversal.Common.html
  commentId: N:Iktan.Ecommerce.Transversal.Common
  fullName: Iktan.Ecommerce.Transversal.Common
  nameWithType: Iktan.Ecommerce.Transversal.Common
- uid: Iktan.Ecommerce.Transversal.Common.IAppLogger`1
  name: IAppLogger<T>
  href: api/Iktan.Ecommerce.Transversal.Common.IAppLogger-1.html
  commentId: T:Iktan.Ecommerce.Transversal.Common.IAppLogger`1
  name.vb: IAppLogger(Of T)
  fullName: Iktan.Ecommerce.Transversal.Common.IAppLogger<T>
  fullName.vb: Iktan.Ecommerce.Transversal.Common.IAppLogger(Of T)
  nameWithType: IAppLogger<T>
  nameWithType.vb: IAppLogger(Of T)
- uid: Iktan.Ecommerce.Transversal.Common.IAppLogger`1.LogError(System.String,System.Object[])
  name: LogError(string, params object[])
  href: api/Iktan.Ecommerce.Transversal.Common.IAppLogger-1.html#Iktan_Ecommerce_Transversal_Common_IAppLogger_1_LogError_System_String_System_Object___
  commentId: M:Iktan.Ecommerce.Transversal.Common.IAppLogger`1.LogError(System.String,System.Object[])
  name.vb: LogError(String, ParamArray Object())
  fullName: Iktan.Ecommerce.Transversal.Common.IAppLogger<T>.LogError(string, params object[])
  fullName.vb: Iktan.Ecommerce.Transversal.Common.IAppLogger(Of T).LogError(String, ParamArray Object())
  nameWithType: IAppLogger<T>.LogError(string, params object[])
  nameWithType.vb: IAppLogger(Of T).LogError(String, ParamArray Object())
- uid: Iktan.Ecommerce.Transversal.Common.IAppLogger`1.LogError*
  name: LogError
  href: api/Iktan.Ecommerce.Transversal.Common.IAppLogger-1.html#Iktan_Ecommerce_Transversal_Common_IAppLogger_1_LogError_
  commentId: Overload:Iktan.Ecommerce.Transversal.Common.IAppLogger`1.LogError
  isSpec: "True"
  fullName: Iktan.Ecommerce.Transversal.Common.IAppLogger<T>.LogError
  fullName.vb: Iktan.Ecommerce.Transversal.Common.IAppLogger(Of T).LogError
  nameWithType: IAppLogger<T>.LogError
  nameWithType.vb: IAppLogger(Of T).LogError
- uid: Iktan.Ecommerce.Transversal.Common.IAppLogger`1.LogInformation(System.String,System.Object[])
  name: LogInformation(string, params object[])
  href: api/Iktan.Ecommerce.Transversal.Common.IAppLogger-1.html#Iktan_Ecommerce_Transversal_Common_IAppLogger_1_LogInformation_System_String_System_Object___
  commentId: M:Iktan.Ecommerce.Transversal.Common.IAppLogger`1.LogInformation(System.String,System.Object[])
  name.vb: LogInformation(String, ParamArray Object())
  fullName: Iktan.Ecommerce.Transversal.Common.IAppLogger<T>.LogInformation(string, params object[])
  fullName.vb: Iktan.Ecommerce.Transversal.Common.IAppLogger(Of T).LogInformation(String, ParamArray Object())
  nameWithType: IAppLogger<T>.LogInformation(string, params object[])
  nameWithType.vb: IAppLogger(Of T).LogInformation(String, ParamArray Object())
- uid: Iktan.Ecommerce.Transversal.Common.IAppLogger`1.LogInformation*
  name: LogInformation
  href: api/Iktan.Ecommerce.Transversal.Common.IAppLogger-1.html#Iktan_Ecommerce_Transversal_Common_IAppLogger_1_LogInformation_
  commentId: Overload:Iktan.Ecommerce.Transversal.Common.IAppLogger`1.LogInformation
  isSpec: "True"
  fullName: Iktan.Ecommerce.Transversal.Common.IAppLogger<T>.LogInformation
  fullName.vb: Iktan.Ecommerce.Transversal.Common.IAppLogger(Of T).LogInformation
  nameWithType: IAppLogger<T>.LogInformation
  nameWithType.vb: IAppLogger(Of T).LogInformation
- uid: Iktan.Ecommerce.Transversal.Common.IAppLogger`1.LogWarning(System.String,System.Object[])
  name: LogWarning(string, params object[])
  href: api/Iktan.Ecommerce.Transversal.Common.IAppLogger-1.html#Iktan_Ecommerce_Transversal_Common_IAppLogger_1_LogWarning_System_String_System_Object___
  commentId: M:Iktan.Ecommerce.Transversal.Common.IAppLogger`1.LogWarning(System.String,System.Object[])
  name.vb: LogWarning(String, ParamArray Object())
  fullName: Iktan.Ecommerce.Transversal.Common.IAppLogger<T>.LogWarning(string, params object[])
  fullName.vb: Iktan.Ecommerce.Transversal.Common.IAppLogger(Of T).LogWarning(String, ParamArray Object())
  nameWithType: IAppLogger<T>.LogWarning(string, params object[])
  nameWithType.vb: IAppLogger(Of T).LogWarning(String, ParamArray Object())
- uid: Iktan.Ecommerce.Transversal.Common.IAppLogger`1.LogWarning*
  name: LogWarning
  href: api/Iktan.Ecommerce.Transversal.Common.IAppLogger-1.html#Iktan_Ecommerce_Transversal_Common_IAppLogger_1_LogWarning_
  commentId: Overload:Iktan.Ecommerce.Transversal.Common.IAppLogger`1.LogWarning
  isSpec: "True"
  fullName: Iktan.Ecommerce.Transversal.Common.IAppLogger<T>.LogWarning
  fullName.vb: Iktan.Ecommerce.Transversal.Common.IAppLogger(Of T).LogWarning
  nameWithType: IAppLogger<T>.LogWarning
  nameWithType.vb: IAppLogger(Of T).LogWarning
- uid: Iktan.Ecommerce.Transversal.Common.IConnectionFactory
  name: IConnectionFactory
  href: api/Iktan.Ecommerce.Transversal.Common.IConnectionFactory.html
  commentId: T:Iktan.Ecommerce.Transversal.Common.IConnectionFactory
  fullName: Iktan.Ecommerce.Transversal.Common.IConnectionFactory
  nameWithType: IConnectionFactory
- uid: Iktan.Ecommerce.Transversal.Common.IConnectionFactory.GetDbConnection
  name: GetDbConnection
  href: api/Iktan.Ecommerce.Transversal.Common.IConnectionFactory.html#Iktan_Ecommerce_Transversal_Common_IConnectionFactory_GetDbConnection
  commentId: P:Iktan.Ecommerce.Transversal.Common.IConnectionFactory.GetDbConnection
  fullName: Iktan.Ecommerce.Transversal.Common.IConnectionFactory.GetDbConnection
  nameWithType: IConnectionFactory.GetDbConnection
- uid: Iktan.Ecommerce.Transversal.Common.IConnectionFactory.GetDbConnection*
  name: GetDbConnection
  href: api/Iktan.Ecommerce.Transversal.Common.IConnectionFactory.html#Iktan_Ecommerce_Transversal_Common_IConnectionFactory_GetDbConnection_
  commentId: Overload:Iktan.Ecommerce.Transversal.Common.IConnectionFactory.GetDbConnection
  isSpec: "True"
  fullName: Iktan.Ecommerce.Transversal.Common.IConnectionFactory.GetDbConnection
  nameWithType: IConnectionFactory.GetDbConnection
- uid: Iktan.Ecommerce.Transversal.Common.Response`1
  name: Response<T>
  href: api/Iktan.Ecommerce.Transversal.Common.Response-1.html
  commentId: T:Iktan.Ecommerce.Transversal.Common.Response`1
  name.vb: Response(Of T)
  fullName: Iktan.Ecommerce.Transversal.Common.Response<T>
  fullName.vb: Iktan.Ecommerce.Transversal.Common.Response(Of T)
  nameWithType: Response<T>
  nameWithType.vb: Response(Of T)
- uid: Iktan.Ecommerce.Transversal.Common.Response`1.Data
  name: Data
  href: api/Iktan.Ecommerce.Transversal.Common.Response-1.html#Iktan_Ecommerce_Transversal_Common_Response_1_Data
  commentId: P:Iktan.Ecommerce.Transversal.Common.Response`1.Data
  fullName: Iktan.Ecommerce.Transversal.Common.Response<T>.Data
  fullName.vb: Iktan.Ecommerce.Transversal.Common.Response(Of T).Data
  nameWithType: Response<T>.Data
  nameWithType.vb: Response(Of T).Data
- uid: Iktan.Ecommerce.Transversal.Common.Response`1.Data*
  name: Data
  href: api/Iktan.Ecommerce.Transversal.Common.Response-1.html#Iktan_Ecommerce_Transversal_Common_Response_1_Data_
  commentId: Overload:Iktan.Ecommerce.Transversal.Common.Response`1.Data
  isSpec: "True"
  fullName: Iktan.Ecommerce.Transversal.Common.Response<T>.Data
  fullName.vb: Iktan.Ecommerce.Transversal.Common.Response(Of T).Data
  nameWithType: Response<T>.Data
  nameWithType.vb: Response(Of T).Data
- uid: Iktan.Ecommerce.Transversal.Common.Response`1.Errors
  name: Errors
  href: api/Iktan.Ecommerce.Transversal.Common.Response-1.html#Iktan_Ecommerce_Transversal_Common_Response_1_Errors
  commentId: P:Iktan.Ecommerce.Transversal.Common.Response`1.Errors
  fullName: Iktan.Ecommerce.Transversal.Common.Response<T>.Errors
  fullName.vb: Iktan.Ecommerce.Transversal.Common.Response(Of T).Errors
  nameWithType: Response<T>.Errors
  nameWithType.vb: Response(Of T).Errors
- uid: Iktan.Ecommerce.Transversal.Common.Response`1.Errors*
  name: Errors
  href: api/Iktan.Ecommerce.Transversal.Common.Response-1.html#Iktan_Ecommerce_Transversal_Common_Response_1_Errors_
  commentId: Overload:Iktan.Ecommerce.Transversal.Common.Response`1.Errors
  isSpec: "True"
  fullName: Iktan.Ecommerce.Transversal.Common.Response<T>.Errors
  fullName.vb: Iktan.Ecommerce.Transversal.Common.Response(Of T).Errors
  nameWithType: Response<T>.Errors
  nameWithType.vb: Response(Of T).Errors
- uid: Iktan.Ecommerce.Transversal.Common.Response`1.IsSuccess
  name: IsSuccess
  href: api/Iktan.Ecommerce.Transversal.Common.Response-1.html#Iktan_Ecommerce_Transversal_Common_Response_1_IsSuccess
  commentId: P:Iktan.Ecommerce.Transversal.Common.Response`1.IsSuccess
  fullName: Iktan.Ecommerce.Transversal.Common.Response<T>.IsSuccess
  fullName.vb: Iktan.Ecommerce.Transversal.Common.Response(Of T).IsSuccess
  nameWithType: Response<T>.IsSuccess
  nameWithType.vb: Response(Of T).IsSuccess
- uid: Iktan.Ecommerce.Transversal.Common.Response`1.IsSuccess*
  name: IsSuccess
  href: api/Iktan.Ecommerce.Transversal.Common.Response-1.html#Iktan_Ecommerce_Transversal_Common_Response_1_IsSuccess_
  commentId: Overload:Iktan.Ecommerce.Transversal.Common.Response`1.IsSuccess
  isSpec: "True"
  fullName: Iktan.Ecommerce.Transversal.Common.Response<T>.IsSuccess
  fullName.vb: Iktan.Ecommerce.Transversal.Common.Response(Of T).IsSuccess
  nameWithType: Response<T>.IsSuccess
  nameWithType.vb: Response(Of T).IsSuccess
- uid: Iktan.Ecommerce.Transversal.Common.Response`1.Message
  name: Message
  href: api/Iktan.Ecommerce.Transversal.Common.Response-1.html#Iktan_Ecommerce_Transversal_Common_Response_1_Message
  commentId: P:Iktan.Ecommerce.Transversal.Common.Response`1.Message
  fullName: Iktan.Ecommerce.Transversal.Common.Response<T>.Message
  fullName.vb: Iktan.Ecommerce.Transversal.Common.Response(Of T).Message
  nameWithType: Response<T>.Message
  nameWithType.vb: Response(Of T).Message
- uid: Iktan.Ecommerce.Transversal.Common.Response`1.Message*
  name: Message
  href: api/Iktan.Ecommerce.Transversal.Common.Response-1.html#Iktan_Ecommerce_Transversal_Common_Response_1_Message_
  commentId: Overload:Iktan.Ecommerce.Transversal.Common.Response`1.Message
  isSpec: "True"
  fullName: Iktan.Ecommerce.Transversal.Common.Response<T>.Message
  fullName.vb: Iktan.Ecommerce.Transversal.Common.Response(Of T).Message
  nameWithType: Response<T>.Message
  nameWithType.vb: Response(Of T).Message
- uid: Iktan.Ecommerce.Transversal.Logging
  name: Iktan.Ecommerce.Transversal.Logging
  href: api/Iktan.Ecommerce.Transversal.Logging.html
  commentId: N:Iktan.Ecommerce.Transversal.Logging
  fullName: Iktan.Ecommerce.Transversal.Logging
  nameWithType: Iktan.Ecommerce.Transversal.Logging
- uid: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter`1
  name: LoggerAdapter<T>
  href: api/Iktan.Ecommerce.Transversal.Logging.LoggerAdapter-1.html
  commentId: T:Iktan.Ecommerce.Transversal.Logging.LoggerAdapter`1
  name.vb: LoggerAdapter(Of T)
  fullName: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter<T>
  fullName.vb: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter(Of T)
  nameWithType: LoggerAdapter<T>
  nameWithType.vb: LoggerAdapter(Of T)
- uid: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter`1.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)
  name: LoggerAdapter(ILoggerFactory)
  href: api/Iktan.Ecommerce.Transversal.Logging.LoggerAdapter-1.html#Iktan_Ecommerce_Transversal_Logging_LoggerAdapter_1__ctor_Microsoft_Extensions_Logging_ILoggerFactory_
  commentId: M:Iktan.Ecommerce.Transversal.Logging.LoggerAdapter`1.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)
  name.vb: New(ILoggerFactory)
  fullName: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter<T>.LoggerAdapter(Microsoft.Extensions.Logging.ILoggerFactory)
  fullName.vb: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter(Of T).New(Microsoft.Extensions.Logging.ILoggerFactory)
  nameWithType: LoggerAdapter<T>.LoggerAdapter(ILoggerFactory)
  nameWithType.vb: LoggerAdapter(Of T).New(ILoggerFactory)
- uid: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter`1.#ctor*
  name: LoggerAdapter
  href: api/Iktan.Ecommerce.Transversal.Logging.LoggerAdapter-1.html#Iktan_Ecommerce_Transversal_Logging_LoggerAdapter_1__ctor_
  commentId: Overload:Iktan.Ecommerce.Transversal.Logging.LoggerAdapter`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter<T>.LoggerAdapter
  fullName.vb: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter(Of T).New
  nameWithType: LoggerAdapter<T>.LoggerAdapter
  nameWithType.vb: LoggerAdapter(Of T).New
- uid: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter`1.LogError(System.String,System.Object[])
  name: LogError(string, params object[])
  href: api/Iktan.Ecommerce.Transversal.Logging.LoggerAdapter-1.html#Iktan_Ecommerce_Transversal_Logging_LoggerAdapter_1_LogError_System_String_System_Object___
  commentId: M:Iktan.Ecommerce.Transversal.Logging.LoggerAdapter`1.LogError(System.String,System.Object[])
  name.vb: LogError(String, ParamArray Object())
  fullName: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter<T>.LogError(string, params object[])
  fullName.vb: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter(Of T).LogError(String, ParamArray Object())
  nameWithType: LoggerAdapter<T>.LogError(string, params object[])
  nameWithType.vb: LoggerAdapter(Of T).LogError(String, ParamArray Object())
- uid: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter`1.LogError*
  name: LogError
  href: api/Iktan.Ecommerce.Transversal.Logging.LoggerAdapter-1.html#Iktan_Ecommerce_Transversal_Logging_LoggerAdapter_1_LogError_
  commentId: Overload:Iktan.Ecommerce.Transversal.Logging.LoggerAdapter`1.LogError
  isSpec: "True"
  fullName: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter<T>.LogError
  fullName.vb: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter(Of T).LogError
  nameWithType: LoggerAdapter<T>.LogError
  nameWithType.vb: LoggerAdapter(Of T).LogError
- uid: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter`1.LogInformation(System.String,System.Object[])
  name: LogInformation(string, params object[])
  href: api/Iktan.Ecommerce.Transversal.Logging.LoggerAdapter-1.html#Iktan_Ecommerce_Transversal_Logging_LoggerAdapter_1_LogInformation_System_String_System_Object___
  commentId: M:Iktan.Ecommerce.Transversal.Logging.LoggerAdapter`1.LogInformation(System.String,System.Object[])
  name.vb: LogInformation(String, ParamArray Object())
  fullName: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter<T>.LogInformation(string, params object[])
  fullName.vb: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter(Of T).LogInformation(String, ParamArray Object())
  nameWithType: LoggerAdapter<T>.LogInformation(string, params object[])
  nameWithType.vb: LoggerAdapter(Of T).LogInformation(String, ParamArray Object())
- uid: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter`1.LogInformation*
  name: LogInformation
  href: api/Iktan.Ecommerce.Transversal.Logging.LoggerAdapter-1.html#Iktan_Ecommerce_Transversal_Logging_LoggerAdapter_1_LogInformation_
  commentId: Overload:Iktan.Ecommerce.Transversal.Logging.LoggerAdapter`1.LogInformation
  isSpec: "True"
  fullName: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter<T>.LogInformation
  fullName.vb: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter(Of T).LogInformation
  nameWithType: LoggerAdapter<T>.LogInformation
  nameWithType.vb: LoggerAdapter(Of T).LogInformation
- uid: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter`1.LogWarning(System.String,System.Object[])
  name: LogWarning(string, params object[])
  href: api/Iktan.Ecommerce.Transversal.Logging.LoggerAdapter-1.html#Iktan_Ecommerce_Transversal_Logging_LoggerAdapter_1_LogWarning_System_String_System_Object___
  commentId: M:Iktan.Ecommerce.Transversal.Logging.LoggerAdapter`1.LogWarning(System.String,System.Object[])
  name.vb: LogWarning(String, ParamArray Object())
  fullName: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter<T>.LogWarning(string, params object[])
  fullName.vb: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter(Of T).LogWarning(String, ParamArray Object())
  nameWithType: LoggerAdapter<T>.LogWarning(string, params object[])
  nameWithType.vb: LoggerAdapter(Of T).LogWarning(String, ParamArray Object())
- uid: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter`1.LogWarning*
  name: LogWarning
  href: api/Iktan.Ecommerce.Transversal.Logging.LoggerAdapter-1.html#Iktan_Ecommerce_Transversal_Logging_LoggerAdapter_1_LogWarning_
  commentId: Overload:Iktan.Ecommerce.Transversal.Logging.LoggerAdapter`1.LogWarning
  isSpec: "True"
  fullName: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter<T>.LogWarning
  fullName.vb: Iktan.Ecommerce.Transversal.Logging.LoggerAdapter(Of T).LogWarning
  nameWithType: LoggerAdapter<T>.LogWarning
  nameWithType.vb: LoggerAdapter(Of T).LogWarning
- uid: Iktan.Ecommerce.Transversal.Mapper
  name: Iktan.Ecommerce.Transversal.Mapper
  href: api/Iktan.Ecommerce.Transversal.Mapper.html
  commentId: N:Iktan.Ecommerce.Transversal.Mapper
  fullName: Iktan.Ecommerce.Transversal.Mapper
  nameWithType: Iktan.Ecommerce.Transversal.Mapper
- uid: Iktan.Ecommerce.Transversal.Mapper.MappingsProfile
  name: MappingsProfile
  href: api/Iktan.Ecommerce.Transversal.Mapper.MappingsProfile.html
  commentId: T:Iktan.Ecommerce.Transversal.Mapper.MappingsProfile
  fullName: Iktan.Ecommerce.Transversal.Mapper.MappingsProfile
  nameWithType: MappingsProfile
- uid: Iktan.Ecommerce.Transversal.Mapper.MappingsProfile.#ctor
  name: MappingsProfile()
  href: api/Iktan.Ecommerce.Transversal.Mapper.MappingsProfile.html#Iktan_Ecommerce_Transversal_Mapper_MappingsProfile__ctor
  commentId: M:Iktan.Ecommerce.Transversal.Mapper.MappingsProfile.#ctor
  name.vb: New()
  fullName: Iktan.Ecommerce.Transversal.Mapper.MappingsProfile.MappingsProfile()
  fullName.vb: Iktan.Ecommerce.Transversal.Mapper.MappingsProfile.New()
  nameWithType: MappingsProfile.MappingsProfile()
  nameWithType.vb: MappingsProfile.New()
- uid: Iktan.Ecommerce.Transversal.Mapper.MappingsProfile.#ctor*
  name: MappingsProfile
  href: api/Iktan.Ecommerce.Transversal.Mapper.MappingsProfile.html#Iktan_Ecommerce_Transversal_Mapper_MappingsProfile__ctor_
  commentId: Overload:Iktan.Ecommerce.Transversal.Mapper.MappingsProfile.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Iktan.Ecommerce.Transversal.Mapper.MappingsProfile.MappingsProfile
  fullName.vb: Iktan.Ecommerce.Transversal.Mapper.MappingsProfile.New
  nameWithType: MappingsProfile.MappingsProfile
  nameWithType.vb: MappingsProfile.New
